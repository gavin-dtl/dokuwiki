a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1473774611;s:8:"modified";i:1473823553;}s:7:"creator";s:9:"邓庭亮";s:4:"user";s:5:"gavin";s:11:"last_change";a:8:{s:4:"date";i:1473823553;s:2:"ip";s:12:"192.168.3.42";s:4:"type";s:1:"E";s:2:"id";s:34:"android:c_cpp:mutex_autolock介绍";s:4:"user";s:5:"gavin";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:3750;}s:11:"contributor";a:1:{s:5:"gavin";s:9:"邓庭亮";}s:5:"title";s:20:"mutex:autolock介绍";s:11:"description";a:2:{s:15:"tableofcontents";a:3:{i:0;a:4:{s:3:"hid";s:19:"mutexautolock介绍";s:5:"title";s:20:"mutex:autolock介绍";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:1;a:4:{s:3:"hid";s:11:"mutex介绍";s:5:"title";s:11:"Mutex介绍";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:2;a:4:{s:3:"hid";s:6:"mutexh";s:5:"title";s:7:"Mutex.h";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:451:"mutex:autolock介绍

Mutex是互斥类，用于多线程访问同一个资源的时候，保证一次只有一个线程能访问该资源。在《Windows核心编程》①一书中，对于这种互斥访问有一个很形象的比喻：想象你在飞机上如厕，这时卫生间的信息牌上显示“有人”，你必须等里面的人出来后才可进去。这就是互斥的含义。
下面来看Mutex的实现方式，它们都很简单。";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1473774611;s:8:"modified";i:1473823553;}s:7:"creator";s:9:"邓庭亮";s:4:"user";s:5:"gavin";s:11:"last_change";a:8:{s:4:"date";i:1473823553;s:2:"ip";s:12:"192.168.3.42";s:4:"type";s:1:"E";s:2:"id";s:34:"android:c_cpp:mutex_autolock介绍";s:4:"user";s:5:"gavin";s:3:"sum";s:0:"";s:5:"extra";s:0:"";s:10:"sizechange";i:3750;}s:11:"contributor";a:1:{s:5:"gavin";s:9:"邓庭亮";}}}