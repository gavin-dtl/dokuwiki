a:2:{s:7:"current";a:7:{s:4:"date";a:2:{s:7:"created";i:1473767503;s:8:"modified";i:1473767503;}s:4:"user";s:0:"";s:7:"creator";s:0:"";s:5:"title";s:12:"二分查找";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:12:"二分查找";s:5:"title";s:12:"二分查找";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:709:"二分查找


#include <stdio.h>

//二分法对以排好序的数据进行查找
int binary_search(int array[],int value,int size)
{
     int low=0,high=size-1,mid;
    
     while(low<=high)                    //只要高低不碰头就继续二分查找
     {
          mid=(low+high)/2;
          if(value==array[mid])          //比较是不是与中间元素相等
               return mid;
          else if(value > array[mid])     //每查找一次，就判断一次所要查找变量所在范围，并继续二分
               low=mid;                     //如果大小中间值，下限移到中间的后一个位，上限不变，往高方向二分
          else
               high=mid; …";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:3:{s:4:"date";a:1:{s:7:"created";i:1473767503;}s:4:"user";s:0:"";s:7:"creator";s:0:"";}}