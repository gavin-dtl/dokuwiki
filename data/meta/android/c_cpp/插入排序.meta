a:2:{s:7:"current";a:8:{s:4:"date";a:2:{s:7:"created";i:1473768180;s:8:"modified";i:1473768180;}s:7:"creator";s:9:"邓庭亮";s:4:"user";s:5:"gavin";s:11:"last_change";a:8:{s:4:"date";i:1473768180;s:2:"ip";s:12:"192.168.3.42";s:4:"type";s:1:"C";s:2:"id";s:26:"android:c_cpp:插入排序";s:4:"user";s:5:"gavin";s:3:"sum";s:6:"创建";s:5:"extra";s:0:"";s:10:"sizechange";i:592;}s:5:"title";s:12:"插入排序";s:11:"description";a:2:{s:15:"tableofcontents";a:1:{i:0;a:4:{s:3:"hid";s:12:"插入排序";s:5:"title";s:12:"插入排序";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:568:"插入排序


//从小到大进行排序
insertsort(int k[],int n)              /*直接插入排序*/
{
    int i,j;
    int temp;

    for(i=1;i<n;i++)
    {
        temp = k[i];                    //将要比较的值先绶存起来留出一个空位，方便移动
        j = i - 1;
        while(j>=0 && k[j]>temp)    //比较直到出现比temp大的值，或向前找到头
        {
               k[j+1] = k[j];               //将前面的值往后移
               j--;
          }
        k[j+1] = temp;                  //插在a[j]的后面
    }
}…";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}s:8:"relation";a:1:{s:10:"firstimage";s:0:"";}}s:10:"persistent";a:4:{s:4:"date";a:1:{s:7:"created";i:1473768180;}s:7:"creator";s:9:"邓庭亮";s:4:"user";s:5:"gavin";s:11:"last_change";a:8:{s:4:"date";i:1473768180;s:2:"ip";s:12:"192.168.3.42";s:4:"type";s:1:"C";s:2:"id";s:26:"android:c_cpp:插入排序";s:4:"user";s:5:"gavin";s:3:"sum";s:6:"创建";s:5:"extra";s:0:"";s:10:"sizechange";i:592;}}}