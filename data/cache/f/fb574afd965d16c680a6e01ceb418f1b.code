    Add <span class="kw3">new</span> driver <span class="kw1">for</span> supporting Realtek RTL8152 Based USB <span class="nu16">2.0</span> Ethernet Adapters
&nbsp;
    Signed<span class="sy2">-</span>off<span class="sy2">-</span>by<span class="sy4">:</span> Hayes Wang <span class="sy1">&lt;</span>hayeswang@realtek.<span class="me1">com</span><span class="sy1">&gt;</span>
    Cc<span class="sy4">:</span> Realtek linux nic maintainers <span class="sy1">&lt;</span>nic_swsd@realtek.<span class="me1">com</span><span class="sy1">&gt;</span>
    <span class="sy2">---</span>
     drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Kconfig     <span class="sy3">|</span>   <span class="nu0">11</span> <span class="sy2">+</span>
     drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Makefile    <span class="sy3">|</span>    <span class="nu0">1</span> <span class="sy2">+</span>
     drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>cdc_ether.<span class="me1">c</span> <span class="sy3">|</span>   <span class="nu0">10</span> <span class="sy2">+</span>
     drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>r8152.<span class="me1">c</span>     <span class="sy3">|</span> <span class="nu0">1751</span> <span class="sy2">+++++++++++++++++++++++++++++++++++++++++++</span>
     <span class="nu0">4</span> files changed, <span class="nu0">1773</span> insertions<span class="br0">&#40;</span><span class="sy2">+</span><span class="br0">&#41;</span>
     create mode <span class="nu0">100644</span> drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>r8152.<span class="me1">c</span>
&nbsp;
    diff <span class="sy2">--</span>git a<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Kconfig b<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Kconfig
    index 7c769d8..287cc62 <span class="nu0">100644</span>
    <span class="sy2">---</span> a<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Kconfig
    <span class="sy2">+++</span> b<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Kconfig
    @@ <span class="sy2">-</span><span class="nu0">93</span>,<span class="nu0">6</span> <span class="sy2">+</span><span class="nu0">93</span>,<span class="nu0">17</span> @@ config USB_RTL8150
              To compile <span class="kw3">this</span> driver as a module, choose M here<span class="sy4">:</span> the
              module will be called rtl8150.
&nbsp;
    <span class="sy2">+</span>config USB_RTL8152
    <span class="sy2">+</span>       tristate <span class="st0">&quot;Realtek RTL8152 Based USB 2.0 Ethernet Adapters&quot;</span>
    <span class="sy2">+</span>       select NET_CORE
    <span class="sy2">+</span>       select MII
    <span class="sy2">+</span>       help
    <span class="sy2">+</span>         This option adds support <span class="kw1">for</span> Realtek RTL8152 based USB <span class="nu16">2.0</span>
    <span class="sy2">+</span>         <span class="nu0">10</span><span class="sy2">/</span><span class="nu0">100</span> Ethernet adapters.
    <span class="sy2">+</span>
    <span class="sy2">+</span>         To compile <span class="kw3">this</span> driver as a module, choose M here<span class="sy4">:</span> the
    <span class="sy2">+</span>         module will be called r8152.
    <span class="sy2">+</span>
     config USB_USBNET
            tristate <span class="st0">&quot;Multi-purpose USB Networking Framework&quot;</span>
            select NET_CORE
    diff <span class="sy2">--</span>git a<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Makefile b<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Makefile
    index 119b06c..9ab5c9d <span class="nu0">100644</span>
    <span class="sy2">---</span> a<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Makefile
    <span class="sy2">+++</span> b<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>Makefile
    @@ <span class="sy2">-</span><span class="nu0">6</span>,<span class="nu0">6</span> <span class="sy2">+</span><span class="nu0">6</span>,<span class="nu0">7</span> @@ obj<span class="sy2">-</span>$<span class="br0">&#40;</span>CONFIG_USB_CATC<span class="br0">&#41;</span>          <span class="sy2">+</span><span class="sy1">=</span> catc.<span class="me1">o</span>
     obj<span class="sy2">-</span>$<span class="br0">&#40;</span>CONFIG_USB_KAWETH<span class="br0">&#41;</span>       <span class="sy2">+</span><span class="sy1">=</span> kaweth.<span class="me1">o</span>
     obj<span class="sy2">-</span>$<span class="br0">&#40;</span>CONFIG_USB_PEGASUS<span class="br0">&#41;</span>      <span class="sy2">+</span><span class="sy1">=</span> pegasus.<span class="me1">o</span>
     obj<span class="sy2">-</span>$<span class="br0">&#40;</span>CONFIG_USB_RTL8150<span class="br0">&#41;</span>      <span class="sy2">+</span><span class="sy1">=</span> rtl8150.<span class="me1">o</span>
    <span class="sy2">+</span>obj<span class="sy2">-</span>$<span class="br0">&#40;</span>CONFIG_USB_RTL8152<span class="br0">&#41;</span>      <span class="sy2">+</span><span class="sy1">=</span> r8152.<span class="me1">o</span>
     obj<span class="sy2">-</span>$<span class="br0">&#40;</span>CONFIG_USB_HSO<span class="br0">&#41;</span>          <span class="sy2">+</span><span class="sy1">=</span> hso.<span class="me1">o</span>
     obj<span class="sy2">-</span>$<span class="br0">&#40;</span>CONFIG_USB_NET_AX8817X<span class="br0">&#41;</span>  <span class="sy2">+</span><span class="sy1">=</span> asix.<span class="me1">o</span>
     asix<span class="sy2">-</span>y <span class="sy4">:</span><span class="sy1">=</span> asix_devices.<span class="me1">o</span> asix_common.<span class="me1">o</span> ax88172a.<span class="me1">o</span>
    diff <span class="sy2">--</span>git a<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>cdc_ether.<span class="me1">c</span> b<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>cdc_ether.<span class="me1">c</span>
    index 4ff71d6..24fbec2 <span class="nu0">100644</span>
    <span class="sy2">---</span> a<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>cdc_ether.<span class="me1">c</span>
    <span class="sy2">+++</span> b<span class="sy2">/</span>drivers<span class="sy2">/</span>net<span class="sy2">/</span>usb<span class="sy2">/</span>cdc_ether.<span class="me1">c</span>
    @@ <span class="sy2">-</span><span class="nu0">479</span>,<span class="nu0">6</span> <span class="sy2">+</span><span class="nu0">479</span>,<span class="nu0">7</span> @@ <span class="kw4">static</span> <span class="kw4">const</span> <span class="kw4">struct</span> driver_info wwan_info <span class="sy1">=</span> <span class="br0">&#123;</span>
     <span class="co2">#define NOVATEL_VENDOR_ID      0x1410</span>
     <span class="co2">#define ZTE_VENDOR_ID          0x19D2</span>
     <span class="co2">#define DELL_VENDOR_ID         0x413C</span>
    <span class="sy2">+</span><span class="co2">#define REALTEK_VENDOR_ID      0x0bda</span>
&nbsp;
     <span class="kw4">static</span> <span class="kw4">const</span> <span class="kw4">struct</span> usb_device_id      products <span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="br0">&#123;</span>
     <span class="coMULTI">/*
    @@ -619,6 +620,15 @@ static const struct usb_device_id  products [] = {
            .driver_info = 0,
     },
&nbsp;
    +/* Realtek RTL8152 Based USB 2.0 Ethernet Adapters */</span>
    <span class="sy2">+</span><span class="co2">#if defined(CONFIG_USB_RTL8152) || defined(CONFIG_USB_RTL8152_MODULE)</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       USB_DEVICE_AND_INTERFACE_INFO<span class="br0">&#40;</span>REALTEK_VENDOR_ID, <span class="nu12">0x8152</span>, USB_CLASS_COMM,
    <span class="sy2">+</span>                       USB_CDC_SUBCLASS_ETHERNET, USB_CDC_PROTO_NONE<span class="br0">&#41;</span>,
    <span class="sy2">+</span>       .<span class="me1">driver_info</span> <span class="sy1">=</span> <span class="nu0">0</span>,
    <span class="sy2">+</span><span class="br0">&#125;</span>,
    <span class="sy2">+</span><span class="co2">#endif</span>
    <span class="sy2">+</span>
     <span class="coMULTI">/*
      * WHITELIST!!!
      *
    diff --git a/drivers/net/usb/r8152.c b/drivers/net/usb/r8152.c
    new file mode 100644
    index 0000000..8031c48
    --- /dev/null
    +++ b/drivers/net/usb/r8152.c
    @@ -0,0 +1,1751 @@
    +/*
    + *  Copyright (c) 2013 Realtek Semiconductor Corp. All rights reserved.
    + *
    + * This program is free software; you can redistribute it and/or
    + * modify it under the terms of the GNU General Public License
    + * version 2 as published by the Free Software Foundation.
    + *
    + *  This product is covered by one or more of the following patents:
    + *  US6,570,884, US6,115,776, and US6,327,625.
    + */</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/init.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/signal.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/slab.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/module.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/version.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/netdevice.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/etherdevice.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/mii.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/ethtool.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/usb.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/crc32.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/if_vlan.h&gt;</span>
    <span class="sy2">+</span><span class="co2">#include &lt;linux/uaccess.h&gt;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* Version Information */</span>
    <span class="sy2">+</span><span class="co2">#define DRIVER_VERSION &quot;v1.0.0 (2013/04/25)&quot;</span>
    <span class="sy2">+</span><span class="co2">#define DRIVER_AUTHOR &quot;Realtek linux nic maintainers &lt;nic_swsd@realtek.com&gt;&quot;</span>
    <span class="sy2">+</span><span class="co2">#define DRIVER_DESC &quot;Realtek RTL8152 Based USB 2.0 Ethernet Adapters&quot;</span>
    <span class="sy2">+</span><span class="co2">#define MODULENAME &quot;r8152&quot;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#define PATENTS                &quot;This product is covered by one or more of the &quot; \
    +                       &quot;following patents:\n&quot; \
    +                       &quot;\t\tUS6,570,884, US6,115,776, and US6,327,625.\n&quot;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#define R8152_PHY_ID           32</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#define PLA_IDR                        0xc000</span>
    <span class="sy2">+</span><span class="co2">#define PLA_RCR                        0xc010</span>
    <span class="sy2">+</span><span class="co2">#define PLA_RMS                        0xc016</span>
    <span class="sy2">+</span><span class="co2">#define PLA_RXFIFO_CTRL0       0xc0a0</span>
    <span class="sy2">+</span><span class="co2">#define PLA_RXFIFO_CTRL1       0xc0a4</span>
    <span class="sy2">+</span><span class="co2">#define PLA_RXFIFO_CTRL2       0xc0a8</span>
    <span class="sy2">+</span><span class="co2">#define PLA_FMC                        0xc0b4</span>
    <span class="sy2">+</span><span class="co2">#define PLA_CFG_WOL            0xc0b6</span>
    <span class="sy2">+</span><span class="co2">#define PLA_MAR                        0xcd00</span>
    <span class="sy2">+</span><span class="co2">#define PAL_BDC_CR             0xd1a0</span>
    <span class="sy2">+</span><span class="co2">#define PLA_LEDSEL             0xdd90</span>
    <span class="sy2">+</span><span class="co2">#define PLA_LED_FEATURE                0xdd92</span>
    <span class="sy2">+</span><span class="co2">#define PLA_PHYAR              0xde00</span>
    <span class="sy2">+</span><span class="co2">#define PLA_GPHY_INTR_IMR      0xe022</span>
    <span class="sy2">+</span><span class="co2">#define PLA_EEE_CR             0xe040</span>
    <span class="sy2">+</span><span class="co2">#define PLA_EEEP_CR            0xe080</span>
    <span class="sy2">+</span><span class="co2">#define PLA_MAC_PWR_CTRL       0xe0c0</span>
    <span class="sy2">+</span><span class="co2">#define PLA_TCR0               0xe610</span>
    <span class="sy2">+</span><span class="co2">#define PLA_TCR1               0xe612</span>
    <span class="sy2">+</span><span class="co2">#define PLA_TXFIFO_CTRL                0xe618</span>
    <span class="sy2">+</span><span class="co2">#define PLA_RSTTELLY           0xe800</span>
    <span class="sy2">+</span><span class="co2">#define PLA_CR                 0xe813</span>
    <span class="sy2">+</span><span class="co2">#define PLA_CRWECR             0xe81c</span>
    <span class="sy2">+</span><span class="co2">#define PLA_CONFIG5            0xe822</span>
    <span class="sy2">+</span><span class="co2">#define PLA_PHY_PWR            0xe84c</span>
    <span class="sy2">+</span><span class="co2">#define PLA_OOB_CTRL           0xe84f</span>
    <span class="sy2">+</span><span class="co2">#define PLA_CPCR               0xe854</span>
    <span class="sy2">+</span><span class="co2">#define PLA_MISC_0             0xe858</span>
    <span class="sy2">+</span><span class="co2">#define PLA_MISC_1             0xe85a</span>
    <span class="sy2">+</span><span class="co2">#define PLA_OCP_GPHY_BASE      0xe86c</span>
    <span class="sy2">+</span><span class="co2">#define PLA_TELLYCNT           0xe890</span>
    <span class="sy2">+</span><span class="co2">#define PLA_SFF_STS_7          0xe8de</span>
    <span class="sy2">+</span><span class="co2">#define PLA_PHYSTATUS          0xe908</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_BA              0xfc26</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_0               0xfc28</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_1               0xfc2a</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_2               0xfc2c</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_3               0xfc2e</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_4               0xfc30</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_5               0xfc32</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_6               0xfc34</span>
    <span class="sy2">+</span><span class="co2">#define PLA_BP_7               0xfc36</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#define USB_DEV_STAT           0xb808</span>
    <span class="sy2">+</span><span class="co2">#define USB_USB_CTRL           0xd406</span>
    <span class="sy2">+</span><span class="co2">#define USB_PHY_CTRL           0xd408</span>
    <span class="sy2">+</span><span class="co2">#define USB_TX_AGG             0xd40a</span>
    <span class="sy2">+</span><span class="co2">#define USB_RX_BUF_TH          0xd40c</span>
    <span class="sy2">+</span><span class="co2">#define USB_USB_TIMER          0xd428</span>
    <span class="sy2">+</span><span class="co2">#define USB_PM_CTRL_STATUS     0xd432</span>
    <span class="sy2">+</span><span class="co2">#define USB_TX_DMA             0xd434</span>
    <span class="sy2">+</span><span class="co2">#define USB_UPS_CTRL           0xd800</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_BA              0xfc26</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_0               0xfc28</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_1               0xfc2a</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_2               0xfc2c</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_3               0xfc2e</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_4               0xfc30</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_5               0xfc32</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_6               0xfc34</span>
    <span class="sy2">+</span><span class="co2">#define USB_BP_7               0xfc36</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* OCP Registers */</span>
    <span class="sy2">+</span><span class="co2">#define OCP_ALDPS_CONFIG       0x2010</span>
    <span class="sy2">+</span><span class="co2">#define OCP_EEE_CONFIG1                0x2080</span>
    <span class="sy2">+</span><span class="co2">#define OCP_EEE_CONFIG2                0x2092</span>
    <span class="sy2">+</span><span class="co2">#define OCP_EEE_CONFIG3                0x2094</span>
    <span class="sy2">+</span><span class="co2">#define OCP_EEE_AR             0xa41a</span>
    <span class="sy2">+</span><span class="co2">#define OCP_EEE_DATA           0xa41c</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_RCR */</span>
    <span class="sy2">+</span><span class="co2">#define RCR_AAP                        0x00000001</span>
    <span class="sy2">+</span><span class="co2">#define RCR_APM                        0x00000002</span>
    <span class="sy2">+</span><span class="co2">#define RCR_AM                 0x00000004</span>
    <span class="sy2">+</span><span class="co2">#define RCR_AB                 0x00000008</span>
    <span class="sy2">+</span><span class="co2">#define RCR_ACPT_ALL           (RCR_AAP | RCR_APM | RCR_AM | RCR_AB)</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_RXFIFO_CTRL0 */</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_THR1_NORMAL     0x00080002</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_THR1_OOB                0x01800003</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_RXFIFO_CTRL1 */</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_THR2_FULL       0x00000060</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_THR2_HIGH       0x00000038</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_THR2_OOB                0x0000004a</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_RXFIFO_CTRL2 */</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_THR3_FULL       0x00000078</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_THR3_HIGH       0x00000048</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_THR3_OOB                0x0000005a</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_TXFIFO_CTRL */</span>
    <span class="sy2">+</span><span class="co2">#define TXFIFO_THR_NORMAL      0x00400008</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_FMC */</span>
    <span class="sy2">+</span><span class="co2">#define FMC_FCR_MCU_EN         0x0001</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_EEEP_CR */</span>
    <span class="sy2">+</span><span class="co2">#define EEEP_CR_EEEP_TX                0x0002</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_TCR0 */</span>
    <span class="sy2">+</span><span class="co2">#define TCR0_TX_EMPTY          0x0800</span>
    <span class="sy2">+</span><span class="co2">#define TCR0_AUTO_FIFO         0x0080</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_TCR1 */</span>
    <span class="sy2">+</span><span class="co2">#define VERSION_MASK           0x7cf0</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_CR */</span>
    <span class="sy2">+</span><span class="co2">#define CR_RST                 0x10</span>
    <span class="sy2">+</span><span class="co2">#define CR_RE                  0x08</span>
    <span class="sy2">+</span><span class="co2">#define CR_TE                  0x04</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_CRWECR */</span>
    <span class="sy2">+</span><span class="co2">#define CRWECR_NORAML          0x00</span>
    <span class="sy2">+</span><span class="co2">#define CRWECR_CONFIG          0xc0</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_OOB_CTRL */</span>
    <span class="sy2">+</span><span class="co2">#define NOW_IS_OOB             0x80</span>
    <span class="sy2">+</span><span class="co2">#define TXFIFO_EMPTY           0x20</span>
    <span class="sy2">+</span><span class="co2">#define RXFIFO_EMPTY           0x10</span>
    <span class="sy2">+</span><span class="co2">#define LINK_LIST_READY                0x02</span>
    <span class="sy2">+</span><span class="co2">#define DIS_MCU_CLROOB         0x01</span>
    <span class="sy2">+</span><span class="co2">#define FIFO_EMPTY             (TXFIFO_EMPTY | RXFIFO_EMPTY)</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_MISC_1 */</span>
    <span class="sy2">+</span><span class="co2">#define RXDY_GATED_EN          0x0008</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_SFF_STS_7 */</span>
    <span class="sy2">+</span><span class="co2">#define RE_INIT_LL             0x8000</span>
    <span class="sy2">+</span><span class="co2">#define MCU_BORW_EN            0x4000</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_CPCR */</span>
    <span class="sy2">+</span><span class="co2">#define CPCR_RX_VLAN           0x0040</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_CFG_WOL */</span>
    <span class="sy2">+</span><span class="co2">#define MAGIC_EN               0x0001</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PAL_BDC_CR */</span>
    <span class="sy2">+</span><span class="co2">#define ALDPS_PROXY_MODE       0x0001</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_CONFIG5 */</span>
    <span class="sy2">+</span><span class="co2">#define LAN_WAKE_EN            0x0002</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_LED_FEATURE */</span>
    <span class="sy2">+</span><span class="co2">#define LED_MODE_MASK          0x0700</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_PHY_PWR */</span>
    <span class="sy2">+</span><span class="co2">#define TX_10M_IDLE_EN         0x0080</span>
    <span class="sy2">+</span><span class="co2">#define PFM_PWM_SWITCH         0x0040</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_MAC_PWR_CTRL */</span>
    <span class="sy2">+</span><span class="co2">#define D3_CLK_GATED_EN                0x00004000</span>
    <span class="sy2">+</span><span class="co2">#define MCU_CLK_RATIO          0x07010f07</span>
    <span class="sy2">+</span><span class="co2">#define MCU_CLK_RATIO_MASK     0x0f0f0f0f</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_GPHY_INTR_IMR */</span>
    <span class="sy2">+</span><span class="co2">#define GPHY_STS_MSK           0x0001</span>
    <span class="sy2">+</span><span class="co2">#define SPEED_DOWN_MSK         0x0002</span>
    <span class="sy2">+</span><span class="co2">#define SPDWN_RXDV_MSK         0x0004</span>
    <span class="sy2">+</span><span class="co2">#define SPDWN_LINKCHG_MSK      0x0008</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_PHYAR */</span>
    <span class="sy2">+</span><span class="co2">#define PHYAR_FLAG             0x80000000</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* PLA_EEE_CR */</span>
    <span class="sy2">+</span><span class="co2">#define EEE_RX_EN              0x0001</span>
    <span class="sy2">+</span><span class="co2">#define EEE_TX_EN              0x0002</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* USB_DEV_STAT */</span>
    <span class="sy2">+</span><span class="co2">#define STAT_SPEED_MASK                0x0006</span>
    <span class="sy2">+</span><span class="co2">#define STAT_SPEED_HIGH                0x0000</span>
    <span class="sy2">+</span><span class="co2">#define STAT_SPEED_FULL                0x0001</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* USB_TX_AGG */</span>
    <span class="sy2">+</span><span class="co2">#define TX_AGG_MAX_THRESHOLD   0x03</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* USB_RX_BUF_TH */</span>
    <span class="sy2">+</span><span class="co2">#define RX_BUF_THR             0x7a120180</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* USB_TX_DMA */</span>
    <span class="sy2">+</span><span class="co2">#define TEST_MODE_DISABLE      0x00000001</span>
    <span class="sy2">+</span><span class="co2">#define TX_SIZE_ADJUST1                0x00000100</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* USB_UPS_CTRL */</span>
    <span class="sy2">+</span><span class="co2">#define POWER_CUT              0x0100</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* USB_PM_CTRL_STATUS */</span>
    <span class="sy2">+</span><span class="co2">#define RWSUME_INDICATE                0x0001</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* USB_USB_CTRL */</span>
    <span class="sy2">+</span><span class="co2">#define RX_AGG_DISABLE         0x0010</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* OCP_ALDPS_CONFIG */</span>
    <span class="sy2">+</span><span class="co2">#define ENPWRSAVE              0x8000</span>
    <span class="sy2">+</span><span class="co2">#define ENPDNPS                        0x0200</span>
    <span class="sy2">+</span><span class="co2">#define LINKENA                        0x0100</span>
    <span class="sy2">+</span><span class="co2">#define DIS_SDSAVE             0x0010</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* OCP_EEE_CONFIG1 */</span>
    <span class="sy2">+</span><span class="co2">#define RG_TXLPI_MSK_HFDUP     0x8000</span>
    <span class="sy2">+</span><span class="co2">#define RG_MATCLR_EN           0x4000</span>
    <span class="sy2">+</span><span class="co2">#define EEE_10_CAP             0x2000</span>
    <span class="sy2">+</span><span class="co2">#define EEE_NWAY_EN            0x1000</span>
    <span class="sy2">+</span><span class="co2">#define TX_QUIET_EN            0x0200</span>
    <span class="sy2">+</span><span class="co2">#define RX_QUIET_EN            0x0100</span>
    <span class="sy2">+</span><span class="co2">#define SDRISETIME             0x0010  /* bit 4 ~ 6 */</span>
    <span class="sy2">+</span><span class="co2">#define RG_RXLPI_MSK_HFDUP     0x0008</span>
    <span class="sy2">+</span><span class="co2">#define SDFALLTIME             0x0007  /* bit 0 ~ 2 */</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* OCP_EEE_CONFIG2 */</span>
    <span class="sy2">+</span><span class="co2">#define RG_LPIHYS_NUM          0x7000  /* bit 12 ~ 15 */</span>
    <span class="sy2">+</span><span class="co2">#define RG_DACQUIET_EN         0x0400</span>
    <span class="sy2">+</span><span class="co2">#define RG_LDVQUIET_EN         0x0200</span>
    <span class="sy2">+</span><span class="co2">#define RG_CKRSEL              0x0020</span>
    <span class="sy2">+</span><span class="co2">#define RG_EEEPRG_EN           0x0010</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* OCP_EEE_CONFIG3 */</span>
    <span class="sy2">+</span><span class="co2">#define FST_SNR_EYE_R          0x1500  /* bit 7 ~ 15 */</span>
    <span class="sy2">+</span><span class="co2">#define RG_LFS_SEL             0x0060  /* bit 6 ~ 5 */</span>
    <span class="sy2">+</span><span class="co2">#define MSK_PH                 0x0006  /* bit 0 ~ 3 */</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* OCP_EEE_AR */</span>
    <span class="sy2">+</span><span class="coMULTI">/* bit[15:14] function */</span>
    <span class="sy2">+</span><span class="co2">#define FUN_ADDR               0x0000</span>
    <span class="sy2">+</span><span class="co2">#define FUN_DATA               0x4000</span>
    <span class="sy2">+</span><span class="coMULTI">/* bit[4:0] device addr */</span>
    <span class="sy2">+</span><span class="co2">#define DEVICE_ADDR            0x0007</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* OCP_EEE_DATA */</span>
    <span class="sy2">+</span><span class="co2">#define EEE_ADDR               0x003C</span>
    <span class="sy2">+</span><span class="co2">#define EEE_DATA               0x0002</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw2">enum</span> rtl_register_content <span class="br0">&#123;</span>
    <span class="sy2">+</span>       _100bps         <span class="sy1">=</span> <span class="nu12">0x08</span>,
    <span class="sy2">+</span>       _10bps          <span class="sy1">=</span> <span class="nu12">0x04</span>,
    <span class="sy2">+</span>       LINK_STATUS     <span class="sy1">=</span> <span class="nu12">0x02</span>,
    <span class="sy2">+</span>       FULL_DUP        <span class="sy1">=</span> <span class="nu12">0x01</span>,
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#define RTL8152_REQT_READ      0xc0</span>
    <span class="sy2">+</span><span class="co2">#define RTL8152_REQT_WRITE     0x40</span>
    <span class="sy2">+</span><span class="co2">#define RTL8152_REQ_GET_REGS   0x05</span>
    <span class="sy2">+</span><span class="co2">#define RTL8152_REQ_SET_REGS   0x05</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#define BYTE_EN_DWORD          0xff</span>
    <span class="sy2">+</span><span class="co2">#define BYTE_EN_WORD           0x33</span>
    <span class="sy2">+</span><span class="co2">#define BYTE_EN_BYTE           0x11</span>
    <span class="sy2">+</span><span class="co2">#define BYTE_EN_SIX_BYTES      0x3f</span>
    <span class="sy2">+</span><span class="co2">#define BYTE_EN_START_MASK     0x0f</span>
    <span class="sy2">+</span><span class="co2">#define BYTE_EN_END_MASK       0xf0</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#define RTL8152_RMS            (VLAN_ETH_FRAME_LEN + VLAN_HLEN)</span>
    <span class="sy2">+</span><span class="co2">#define RTL8152_TX_TIMEOUT     (HZ)</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* rtl8152 flags */</span>
    <span class="sy2">+</span><span class="kw2">enum</span> rtl8152_flags <span class="br0">&#123;</span>
    <span class="sy2">+</span>       RTL8152_UNPLUG <span class="sy1">=</span> <span class="nu0">0</span>,
    <span class="sy2">+</span>       RX_URB_FAIL,
    <span class="sy2">+</span>       RTL8152_SET_RX_MODE
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* Define these values to match your device */</span>
    <span class="sy2">+</span><span class="co2">#define VENDOR_ID_REALTEK              0x0bda</span>
    <span class="sy2">+</span><span class="co2">#define PRODUCT_ID_RTL8152             0x8152</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="co2">#define MCU_TYPE_PLA                   0x0100</span>
    <span class="sy2">+</span><span class="co2">#define MCU_TYPE_USB                   0x0000</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">struct</span> rx_desc <span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32 opts1<span class="sy4">;</span>
    <span class="sy2">+</span><span class="co2">#define RX_LEN_MASK                    0x7fff</span>
    <span class="sy2">+</span>       u32 opts2<span class="sy4">;</span>
    <span class="sy2">+</span>       u32 opts3<span class="sy4">;</span>
    <span class="sy2">+</span>       u32 opts4<span class="sy4">;</span>
    <span class="sy2">+</span>       u32 opts5<span class="sy4">;</span>
    <span class="sy2">+</span>       u32 opts6<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">struct</span> tx_desc <span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32 opts1<span class="sy4">;</span>
    <span class="sy2">+</span><span class="co2">#define TX_FS                  (1 &lt;&lt; 31) /* First segment of a packet */</span>
    <span class="sy2">+</span><span class="co2">#define TX_LS                  (1 &lt;&lt; 30) /* Final segment of a packet */</span>
    <span class="sy2">+</span><span class="co2">#define TX_LEN_MASK            0xffff</span>
    <span class="sy2">+</span>       u32 opts2<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">struct</span> r8152 <span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">unsigned</span> <span class="kw4">long</span> flags<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> usb_device <span class="sy2">*</span>udev<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> tasklet_struct tl<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> urb <span class="sy2">*</span>rx_urb, <span class="sy2">*</span>tx_urb<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> sk_buff <span class="sy2">*</span>tx_skb, <span class="sy2">*</span>rx_skb<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> delayed_work schedule<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> mii_if_info mii<span class="sy4">;</span>
    <span class="sy2">+</span>       u32 msg_enable<span class="sy4">;</span>
    <span class="sy2">+</span>       u16 ocp_base<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 version<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 speed<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw2">enum</span> rtl_version <span class="br0">&#123;</span>
    <span class="sy2">+</span>       RTL_VER_UNKNOWN <span class="sy1">=</span> <span class="nu0">0</span>,
    <span class="sy2">+</span>       RTL_VER_01,
    <span class="sy2">+</span>       RTL_VER_02
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* Maximum number of multicast addresses to filter (vs. Rx-all-multicast).
    + * The RTL chips use a 64 element hash table based on the Ethernet CRC.
    + */</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">const</span> <span class="kw4">int</span> multicast_filter_limit <span class="sy1">=</span> <span class="nu0">32</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span>
    <span class="sy2">+</span><span class="kw4">int</span> get_registers<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 value, u16 index, u16 size, <span class="kw4">void</span> <span class="sy2">*</span>data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> usb_control_msg<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, usb_rcvctrlpipe<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, <span class="nu0">0</span><span class="br0">&#41;</span>,
    <span class="sy2">+</span>                              RTL8152_REQ_GET_REGS, RTL8152_REQT_READ,
    <span class="sy2">+</span>                              value, index, data, size, <span class="nu0">500</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span>
    <span class="sy2">+</span><span class="kw4">int</span> set_registers<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 value, u16 index, u16 size, <span class="kw4">void</span> <span class="sy2">*</span>data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> usb_control_msg<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, usb_sndctrlpipe<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, <span class="nu0">0</span><span class="br0">&#41;</span>,
    <span class="sy2">+</span>                              RTL8152_REQ_SET_REGS, RTL8152_REQT_WRITE,
    <span class="sy2">+</span>                              value, index, data, size, <span class="nu0">500</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> generic_ocp_read<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 index, u16 size,
    <span class="sy2">+</span>                               <span class="kw4">void</span> <span class="sy2">*</span>data, u16 type<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u16     limit <span class="sy1">=</span> <span class="nu0">64</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     ret <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>test_bit<span class="br0">&#40;</span>RTL8152_UNPLUG, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>ENODEV<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="coMULTI">/* both size and indix must be 4 bytes align */</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>size <span class="sy3">&amp;</span> <span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy3">||</span> <span class="sy3">!</span>size <span class="sy3">||</span> <span class="br0">&#40;</span>index <span class="sy3">&amp;</span> <span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy3">||</span> <span class="sy3">!</span>data<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>EPERM<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>u32<span class="br0">&#41;</span>index <span class="sy2">+</span> <span class="br0">&#40;</span>u32<span class="br0">&#41;</span>size <span class="sy1">&gt;</span> <span class="nu12">0xffff</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>EPERM<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">while</span> <span class="br0">&#40;</span>size<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>size <span class="sy1">&gt;</span> limit<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       ret <span class="sy1">=</span> get_registers<span class="br0">&#40;</span>tp, index, type, limit, data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="kw1">if</span> <span class="br0">&#40;</span>ret <span class="sy1">&lt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>                               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>                       index <span class="sy2">+</span><span class="sy1">=</span> limit<span class="sy4">;</span>
    <span class="sy2">+</span>                       data <span class="sy2">+</span><span class="sy1">=</span> limit<span class="sy4">;</span>
    <span class="sy2">+</span>                       size <span class="sy2">-</span><span class="sy1">=</span> limit<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       ret <span class="sy1">=</span> get_registers<span class="br0">&#40;</span>tp, index, type, size, data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="kw1">if</span> <span class="br0">&#40;</span>ret <span class="sy1">&lt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>                               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>                       index <span class="sy2">+</span><span class="sy1">=</span> size<span class="sy4">;</span>
    <span class="sy2">+</span>                       data <span class="sy2">+</span><span class="sy1">=</span> size<span class="sy4">;</span>
    <span class="sy2">+</span>                       size <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> ret<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> generic_ocp_write<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 index, u16 byteen,
    <span class="sy2">+</span>                               u16 size, <span class="kw4">void</span> <span class="sy2">*</span>data, u16 type<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     ret<span class="sy4">;</span>
    <span class="sy2">+</span>       u16     byteen_start, byteen_end, byen<span class="sy4">;</span>
    <span class="sy2">+</span>       u16     limit <span class="sy1">=</span> <span class="nu0">512</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>test_bit<span class="br0">&#40;</span>RTL8152_UNPLUG, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>ENODEV<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="coMULTI">/* both size and indix must be 4 bytes align */</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>size <span class="sy3">&amp;</span> <span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy3">||</span> <span class="sy3">!</span>size <span class="sy3">||</span> <span class="br0">&#40;</span>index <span class="sy3">&amp;</span> <span class="nu0">3</span><span class="br0">&#41;</span> <span class="sy3">||</span> <span class="sy3">!</span>data<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>EPERM<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>u32<span class="br0">&#41;</span>index <span class="sy2">+</span> <span class="br0">&#40;</span>u32<span class="br0">&#41;</span>size <span class="sy1">&gt;</span> <span class="nu12">0xffff</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>EPERM<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       byteen_start <span class="sy1">=</span> byteen <span class="sy3">&amp;</span> BYTE_EN_START_MASK<span class="sy4">;</span>
    <span class="sy2">+</span>       byteen_end <span class="sy1">=</span> byteen <span class="sy3">&amp;</span> BYTE_EN_END_MASK<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       byen <span class="sy1">=</span> byteen_start <span class="sy3">|</span> <span class="br0">&#40;</span>byteen_start <span class="sy1">&lt;&lt;</span> <span class="nu0">4</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ret <span class="sy1">=</span> set_registers<span class="br0">&#40;</span>tp, index, type <span class="sy3">|</span> byen, <span class="nu0">4</span>, data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>ret <span class="sy1">&lt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> error1<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       index <span class="sy2">+</span><span class="sy1">=</span> <span class="nu0">4</span><span class="sy4">;</span>
    <span class="sy2">+</span>       data <span class="sy2">+</span><span class="sy1">=</span> <span class="nu0">4</span><span class="sy4">;</span>
    <span class="sy2">+</span>       size <span class="sy2">-</span><span class="sy1">=</span> <span class="nu0">4</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>size<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               size <span class="sy2">-</span><span class="sy1">=</span> <span class="nu0">4</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>               <span class="kw1">while</span> <span class="br0">&#40;</span>size<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       <span class="kw1">if</span> <span class="br0">&#40;</span>size <span class="sy1">&gt;</span> limit<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                               ret <span class="sy1">=</span> set_registers<span class="br0">&#40;</span>tp, index,
    <span class="sy2">+</span>                                       type <span class="sy3">|</span> BYTE_EN_DWORD,
    <span class="sy2">+</span>                                       limit, data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                               <span class="kw1">if</span> <span class="br0">&#40;</span>ret <span class="sy1">&lt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>                                       <span class="kw1">goto</span> error1<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>                               index <span class="sy2">+</span><span class="sy1">=</span> limit<span class="sy4">;</span>
    <span class="sy2">+</span>                               data <span class="sy2">+</span><span class="sy1">=</span> limit<span class="sy4">;</span>
    <span class="sy2">+</span>                               size <span class="sy2">-</span><span class="sy1">=</span> limit<span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                               ret <span class="sy1">=</span> set_registers<span class="br0">&#40;</span>tp, index,
    <span class="sy2">+</span>                                       type <span class="sy3">|</span> BYTE_EN_DWORD,
    <span class="sy2">+</span>                                       size, data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                               <span class="kw1">if</span> <span class="br0">&#40;</span>ret <span class="sy1">&lt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>                                       <span class="kw1">goto</span> error1<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>                               index <span class="sy2">+</span><span class="sy1">=</span> size<span class="sy4">;</span>
    <span class="sy2">+</span>                               data <span class="sy2">+</span><span class="sy1">=</span> size<span class="sy4">;</span>
    <span class="sy2">+</span>                               size <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>                               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="br0">&#125;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>               byen <span class="sy1">=</span> byteen_end <span class="sy3">|</span> <span class="br0">&#40;</span>byteen_end <span class="sy1">&gt;&gt;</span> <span class="nu0">4</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ret <span class="sy1">=</span> set_registers<span class="br0">&#40;</span>tp, index, type <span class="sy3">|</span> byen, <span class="nu0">4</span>, data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>ret <span class="sy1">&lt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">goto</span> error1<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>error1<span class="sy4">:</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> ret<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw2">inline</span>
    <span class="sy2">+</span><span class="kw4">int</span> pla_ocp_read<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 index, u16 size, <span class="kw4">void</span> <span class="sy2">*</span>data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> generic_ocp_read<span class="br0">&#40;</span>tp, index, size, data, MCU_TYPE_PLA<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw2">inline</span>
    <span class="sy2">+</span><span class="kw4">int</span> pla_ocp_write<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 index, u16 byteen, u16 size, <span class="kw4">void</span> <span class="sy2">*</span>data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> generic_ocp_write<span class="br0">&#40;</span>tp, index, byteen, size, data, MCU_TYPE_PLA<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw2">inline</span>
    <span class="sy2">+</span><span class="kw4">int</span> usb_ocp_read<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 index, u16 size, <span class="kw4">void</span> <span class="sy2">*</span>data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> generic_ocp_read<span class="br0">&#40;</span>tp, index, size, data, MCU_TYPE_USB<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw2">inline</span>
    <span class="sy2">+</span><span class="kw4">int</span> usb_ocp_write<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 index, u16 byteen, u16 size, <span class="kw4">void</span> <span class="sy2">*</span>data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> generic_ocp_write<span class="br0">&#40;</span>tp, index, byteen, size, data, MCU_TYPE_USB<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> u32 ocp_read_dword<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 type, u16 index<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32 data<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>type <span class="sy1">==</span> MCU_TYPE_PLA<span class="br0">&#41;</span>
    <span class="sy2">+</span>               pla_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span>
    <span class="sy2">+</span>               usb_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> __le32_to_cpu<span class="br0">&#40;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> ocp_write_dword<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 type, u16 index, u32 data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>type <span class="sy1">==</span> MCU_TYPE_PLA<span class="br0">&#41;</span>
    <span class="sy2">+</span>               pla_ocp_write<span class="br0">&#40;</span>tp, index, BYTE_EN_DWORD, <span class="kw3">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span>
    <span class="sy2">+</span>               usb_ocp_write<span class="br0">&#40;</span>tp, index, BYTE_EN_DWORD, <span class="kw3">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> u16 ocp_read_word<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 type, u16 index<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32 data<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 shift <span class="sy1">=</span> index <span class="sy3">&amp;</span> <span class="nu0">2</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       index <span class="sy3">&amp;</span><span class="sy1">=</span> ~<span class="nu0">3</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>type <span class="sy1">==</span> MCU_TYPE_PLA<span class="br0">&#41;</span>
    <span class="sy2">+</span>               pla_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span>
    <span class="sy2">+</span>               usb_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       data <span class="sy1">=</span> __le32_to_cpu<span class="br0">&#40;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       data <span class="sy1">&gt;&gt;=</span> <span class="br0">&#40;</span>shift <span class="sy2">*</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       data <span class="sy3">&amp;</span><span class="sy1">=</span> <span class="nu12">0xffff</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="br0">&#40;</span>u16<span class="br0">&#41;</span>data<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> ocp_write_word<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 type, u16 index, u32 data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32 tmp, mask <span class="sy1">=</span> <span class="nu12">0xffff</span><span class="sy4">;</span>
    <span class="sy2">+</span>       u16 byen <span class="sy1">=</span> BYTE_EN_WORD<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 shift <span class="sy1">=</span> index <span class="sy3">&amp;</span> <span class="nu0">2</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       data <span class="sy3">&amp;</span><span class="sy1">=</span> mask<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>index <span class="sy3">&amp;</span> <span class="nu0">2</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               byen <span class="sy1">&lt;&lt;=</span> shift<span class="sy4">;</span>
    <span class="sy2">+</span>               mask <span class="sy1">&lt;&lt;=</span> <span class="br0">&#40;</span>shift <span class="sy2">*</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               data <span class="sy1">&lt;&lt;=</span> <span class="br0">&#40;</span>shift <span class="sy2">*</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               index <span class="sy3">&amp;</span><span class="sy1">=</span> ~<span class="nu0">3</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>type <span class="sy1">==</span> MCU_TYPE_PLA<span class="br0">&#41;</span>
    <span class="sy2">+</span>               pla_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>tmp<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span>
    <span class="sy2">+</span>               usb_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>tmp<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tmp <span class="sy1">=</span> __le32_to_cpu<span class="br0">&#40;</span>tmp<span class="br0">&#41;</span> <span class="sy3">&amp;</span> ~mask<span class="sy4">;</span>
    <span class="sy2">+</span>       tmp <span class="sy3">|</span><span class="sy1">=</span> data<span class="sy4">;</span>
    <span class="sy2">+</span>       tmp <span class="sy1">=</span> __cpu_to_le32<span class="br0">&#40;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>type <span class="sy1">==</span> MCU_TYPE_PLA<span class="br0">&#41;</span>
    <span class="sy2">+</span>               pla_ocp_write<span class="br0">&#40;</span>tp, index, byen, <span class="kw3">sizeof</span><span class="br0">&#40;</span>tmp<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span>
    <span class="sy2">+</span>               usb_ocp_write<span class="br0">&#40;</span>tp, index, byen, <span class="kw3">sizeof</span><span class="br0">&#40;</span>tmp<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> u8 ocp_read_byte<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 type, u16 index<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32 data<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 shift <span class="sy1">=</span> index <span class="sy3">&amp;</span> <span class="nu0">3</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       index <span class="sy3">&amp;</span><span class="sy1">=</span> ~<span class="nu0">3</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>type <span class="sy1">==</span> MCU_TYPE_PLA<span class="br0">&#41;</span>
    <span class="sy2">+</span>               pla_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span>
    <span class="sy2">+</span>               usb_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       data <span class="sy1">=</span> __le32_to_cpu<span class="br0">&#40;</span>data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       data <span class="sy1">&gt;&gt;=</span> <span class="br0">&#40;</span>shift <span class="sy2">*</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       data <span class="sy3">&amp;</span><span class="sy1">=</span> <span class="nu12">0xff</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="br0">&#40;</span>u8<span class="br0">&#41;</span>data<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> ocp_write_byte<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 type, u16 index, u32 data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32 tmp, mask <span class="sy1">=</span> <span class="nu12">0xff</span><span class="sy4">;</span>
    <span class="sy2">+</span>       u16 byen <span class="sy1">=</span> BYTE_EN_BYTE<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 shift <span class="sy1">=</span> index <span class="sy3">&amp;</span> <span class="nu0">3</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       data <span class="sy3">&amp;</span><span class="sy1">=</span> mask<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>index <span class="sy3">&amp;</span> <span class="nu0">3</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               byen <span class="sy1">&lt;&lt;=</span> shift<span class="sy4">;</span>
    <span class="sy2">+</span>               mask <span class="sy1">&lt;&lt;=</span> <span class="br0">&#40;</span>shift <span class="sy2">*</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               data <span class="sy1">&lt;&lt;=</span> <span class="br0">&#40;</span>shift <span class="sy2">*</span> <span class="nu0">8</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               index <span class="sy3">&amp;</span><span class="sy1">=</span> ~<span class="nu0">3</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>type <span class="sy1">==</span> MCU_TYPE_PLA<span class="br0">&#41;</span>
    <span class="sy2">+</span>               pla_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>tmp<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span>
    <span class="sy2">+</span>               usb_ocp_read<span class="br0">&#40;</span>tp, index, <span class="kw3">sizeof</span><span class="br0">&#40;</span>tmp<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tmp <span class="sy1">=</span> __le32_to_cpu<span class="br0">&#40;</span>tmp<span class="br0">&#41;</span> <span class="sy3">&amp;</span> ~mask<span class="sy4">;</span>
    <span class="sy2">+</span>       tmp <span class="sy3">|</span><span class="sy1">=</span> data<span class="sy4">;</span>
    <span class="sy2">+</span>       tmp <span class="sy1">=</span> __cpu_to_le32<span class="br0">&#40;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>type <span class="sy1">==</span> MCU_TYPE_PLA<span class="br0">&#41;</span>
    <span class="sy2">+</span>               pla_ocp_write<span class="br0">&#40;</span>tp, index, byen, <span class="kw3">sizeof</span><span class="br0">&#40;</span>tmp<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span>
    <span class="sy2">+</span>               usb_ocp_write<span class="br0">&#40;</span>tp, index, byen, <span class="kw3">sizeof</span><span class="br0">&#40;</span>tmp<span class="br0">&#41;</span>, <span class="sy3">&amp;</span>tmp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152_mdio_write<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u32 reg_addr, u32 value<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     i<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> PHYAR_FLAG <span class="sy3">|</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>reg_addr <span class="sy3">&amp;</span> <span class="nu12">0x1f</span><span class="br0">&#41;</span> <span class="sy1">&lt;&lt;</span> <span class="nu0">16</span><span class="br0">&#41;</span> <span class="sy3">|</span>
    <span class="sy2">+</span>                  <span class="br0">&#40;</span>value <span class="sy3">&amp;</span> <span class="nu12">0xffff</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_PHYAR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">20</span><span class="sy4">;</span> i <span class="sy1">&gt;</span> <span class="nu0">0</span><span class="sy4">;</span> i<span class="sy2">--</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               udelay<span class="br0">&#40;</span><span class="nu0">25</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_PHYAR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span><span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> PHYAR_FLAG<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>       udelay<span class="br0">&#40;</span><span class="nu0">20</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> u16 r8152_mdio_read<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u32 reg_addr<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     i<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> <span class="br0">&#40;</span>reg_addr <span class="sy3">&amp;</span> <span class="nu12">0x1f</span><span class="br0">&#41;</span> <span class="sy1">&lt;&lt;</span> <span class="nu0">16</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_PHYAR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">20</span><span class="sy4">;</span> i <span class="sy1">&gt;</span> <span class="nu0">0</span><span class="sy4">;</span> i<span class="sy2">--</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               udelay<span class="br0">&#40;</span><span class="nu0">25</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_PHYAR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> PHYAR_FLAG<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>       udelay<span class="br0">&#40;</span><span class="nu0">20</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="br0">&#40;</span>u16<span class="br0">&#41;</span><span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> <span class="nu12">0xffff</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> read_mii_word<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev, <span class="kw4">int</span> phy_id, <span class="kw4">int</span> reg<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>phy_id <span class="sy3">!</span><span class="sy1">=</span> R8152_PHY_ID<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span><span class="nu0">1</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> r8152_mdio_read<span class="br0">&#40;</span>tp, reg<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span>
    <span class="sy2">+</span><span class="kw4">void</span> write_mii_word<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev, <span class="kw4">int</span> phy_id, <span class="kw4">int</span> reg, <span class="kw4">int</span> val<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>phy_id <span class="sy3">!</span><span class="sy1">=</span> R8152_PHY_ID<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152_mdio_write<span class="br0">&#40;</span>tp, reg, val<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> ocp_reg_write<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u16 addr, u16 data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u16 ocp_base, ocp_index<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_base <span class="sy1">=</span> addr <span class="sy3">&amp;</span> <span class="nu12">0xf000</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>ocp_base <span class="sy3">!</span><span class="sy1">=</span> tp<span class="sy2">-</span><span class="sy1">&gt;</span>ocp_base<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OCP_GPHY_BASE, ocp_base<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               tp<span class="sy2">-</span><span class="sy1">&gt;</span>ocp_base <span class="sy1">=</span> ocp_base<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_index <span class="sy1">=</span> <span class="br0">&#40;</span>addr <span class="sy3">&amp;</span> <span class="nu12">0x0fff</span><span class="br0">&#41;</span> <span class="sy3">|</span> <span class="nu12">0xb000</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, ocp_index, data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw2">inline</span> <span class="kw4">void</span> set_ethernet_addr<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> net_device <span class="sy2">*</span>dev <span class="sy1">=</span> tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 node_id<span class="br0">&#91;</span><span class="nu0">8</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="br0">&#123;</span><span class="nu0">0</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>pla_ocp_read<span class="br0">&#40;</span>tp, PLA_IDR, <span class="kw3">sizeof</span><span class="br0">&#40;</span>node_id<span class="br0">&#41;</span>, node_id<span class="br0">&#41;</span> <span class="sy1">&lt;</span> <span class="nu0">0</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               netif_notice<span class="br0">&#40;</span>tp, probe, dev, <span class="st0">&quot;inet addr fail<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw3">memcpy</span><span class="br0">&#40;</span>dev<span class="sy2">-</span><span class="sy1">&gt;</span>dev_addr, node_id, <span class="kw3">sizeof</span><span class="br0">&#40;</span>node_id<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw3">memcpy</span><span class="br0">&#40;</span>dev<span class="sy2">-</span><span class="sy1">&gt;</span>perm_addr, dev<span class="sy2">-</span><span class="sy1">&gt;</span>dev_addr, dev<span class="sy2">-</span><span class="sy1">&gt;</span>addr_len<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_set_mac_address<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev, <span class="kw4">void</span> <span class="sy2">*</span>p<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> sockaddr <span class="sy2">*</span>addr <span class="sy1">=</span> p<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>is_valid_ether_addr<span class="br0">&#40;</span>addr<span class="sy2">-</span><span class="sy1">&gt;</span>sa_data<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>EADDRNOTAVAIL<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw3">memcpy</span><span class="br0">&#40;</span>netdev<span class="sy2">-</span><span class="sy1">&gt;</span>dev_addr, addr<span class="sy2">-</span><span class="sy1">&gt;</span>sa_data, netdev<span class="sy2">-</span><span class="sy1">&gt;</span>addr_len<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CRWECR, CRWECR_CONFIG<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       pla_ocp_write<span class="br0">&#40;</span>tp, PLA_IDR, BYTE_EN_SIX_BYTES, <span class="nu0">8</span>, addr<span class="sy2">-</span><span class="sy1">&gt;</span>sa_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CRWECR, CRWECR_NORAML<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> alloc_all_urbs<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb <span class="sy1">=</span> usb_alloc_urb<span class="br0">&#40;</span><span class="nu0">0</span>, GFP_KERNEL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_urb <span class="sy1">=</span> usb_alloc_urb<span class="br0">&#40;</span><span class="nu0">0</span>, GFP_KERNEL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_urb<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               usb_free_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="nu0">1</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> free_all_urbs<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       usb_free_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       usb_free_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_urb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">struct</span> net_device_stats <span class="sy2">*</span>rtl8152_get_stats<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>dev<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="sy3">&amp;</span>dev<span class="sy2">-</span><span class="sy1">&gt;</span>stats<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> read_bulk_callback<span class="br0">&#40;</span><span class="kw4">struct</span> urb <span class="sy2">*</span>urb<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">unsigned</span> pkt_len<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> sk_buff <span class="sy2">*</span>skb<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> net_device_stats <span class="sy2">*</span>stats<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> status <span class="sy1">=</span> urb<span class="sy2">-</span><span class="sy1">&gt;</span>status<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> result<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> rx_desc <span class="sy2">*</span>rx_desc<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tp <span class="sy1">=</span> urb<span class="sy2">-</span><span class="sy1">&gt;</span>context<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>test_bit<span class="br0">&#40;</span>RTL8152_UNPLUG, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span>       netdev <span class="sy1">=</span> tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>netif_device_present<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       stats <span class="sy1">=</span> rtl8152_get_stats<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">switch</span> <span class="br0">&#40;</span>status<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> <span class="nu0">0</span><span class="sy4">:</span>
    <span class="sy2">+</span>               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> <span class="sy2">-</span>ESHUTDOWN<span class="sy4">:</span>
    <span class="sy2">+</span>               set_bit<span class="br0">&#40;</span>RTL8152_UNPLUG, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               netif_device_detach<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> <span class="sy2">-</span>ENOENT<span class="sy4">:</span>
    <span class="sy2">+</span>               <span class="kw1">return</span><span class="sy4">;</span> <span class="coMULTI">/* the urb is in unlink state */</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> <span class="sy2">-</span>ETIME<span class="sy4">:</span>
    <span class="sy2">+</span>               pr_warn_ratelimited<span class="br0">&#40;</span><span class="st0">&quot;may be reset is needed?..<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> goon<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">default</span><span class="sy4">:</span>
    <span class="sy2">+</span>               pr_warn_ratelimited<span class="br0">&#40;</span><span class="st0">&quot;Rx status %d<span class="es1">\n</span>&quot;</span>, status<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> goon<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="coMULTI">/* protect against short packets (tell me why we got some?!?) */</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>urb<span class="sy2">-</span><span class="sy1">&gt;</span>actual_length <span class="sy1">&lt;</span> <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="sy2">*</span>rx_desc<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> goon<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       rx_desc <span class="sy1">=</span> <span class="br0">&#40;</span><span class="kw4">struct</span> rx_desc <span class="sy2">*</span><span class="br0">&#41;</span>urb<span class="sy2">-</span><span class="sy1">&gt;</span>transfer_buffer<span class="sy4">;</span>
    <span class="sy2">+</span>       pkt_len <span class="sy1">=</span> le32_to_cpu<span class="br0">&#40;</span>rx_desc<span class="sy2">-</span><span class="sy1">&gt;</span>opts1<span class="br0">&#41;</span> <span class="sy3">&amp;</span> RX_LEN_MASK<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>urb<span class="sy2">-</span><span class="sy1">&gt;</span>actual_length <span class="sy1">&lt;</span> <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> rx_desc<span class="br0">&#41;</span> <span class="sy2">+</span> pkt_len<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> goon<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       skb <span class="sy1">=</span> netdev_alloc_skb_ip_align<span class="br0">&#40;</span>netdev, pkt_len<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>skb<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> goon<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw3">memcpy</span><span class="br0">&#40;</span>skb<span class="sy2">-</span><span class="sy1">&gt;</span>data, tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_skb<span class="sy2">-</span><span class="sy1">&gt;</span>data <span class="sy2">+</span> <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> rx_desc<span class="br0">&#41;</span>, pkt_len<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       skb_put<span class="br0">&#40;</span>skb, pkt_len<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       skb<span class="sy2">-</span><span class="sy1">&gt;</span>protocol <span class="sy1">=</span> eth_type_trans<span class="br0">&#40;</span>skb, netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       netif_rx<span class="br0">&#40;</span>skb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       stats<span class="sy2">-</span><span class="sy1">&gt;</span>rx_packets<span class="sy2">++</span><span class="sy4">;</span>
    <span class="sy2">+</span>       stats<span class="sy2">-</span><span class="sy1">&gt;</span>rx_bytes <span class="sy2">+</span><span class="sy1">=</span> pkt_len<span class="sy4">;</span>
    <span class="sy2">+</span>goon<span class="sy4">:</span>
    <span class="sy2">+</span>       usb_fill_bulk_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb, tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, usb_rcvbulkpipe<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, <span class="nu0">1</span><span class="br0">&#41;</span>,
    <span class="sy2">+</span>                     tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_skb<span class="sy2">-</span><span class="sy1">&gt;</span>data, RTL8152_RMS <span class="sy2">+</span> <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> rx_desc<span class="br0">&#41;</span>,
    <span class="sy2">+</span>                     <span class="br0">&#40;</span>usb_complete_t<span class="br0">&#41;</span>read_bulk_callback, tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       result <span class="sy1">=</span> usb_submit_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb, GFP_ATOMIC<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>result <span class="sy1">==</span> <span class="sy2">-</span>ENODEV<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               netif_device_detach<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>result<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               set_bit<span class="br0">&#40;</span>RX_URB_FAIL, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> resched<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               clear_bit<span class="br0">&#40;</span>RX_URB_FAIL, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span>resched<span class="sy4">:</span>
    <span class="sy2">+</span>       tasklet_schedule<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tl<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rx_fixup<span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">long</span> data<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> status<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tp <span class="sy1">=</span> <span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span><span class="br0">&#41;</span>data<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       status <span class="sy1">=</span> usb_submit_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb, GFP_ATOMIC<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>status <span class="sy1">==</span> <span class="sy2">-</span>ENODEV<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               netif_device_detach<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>status<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               set_bit<span class="br0">&#40;</span>RX_URB_FAIL, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> tlsched<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               clear_bit<span class="br0">&#40;</span>RX_URB_FAIL, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span>tlsched<span class="sy4">:</span>
    <span class="sy2">+</span>       tasklet_schedule<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tl<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> write_bulk_callback<span class="br0">&#40;</span><span class="kw4">struct</span> urb <span class="sy2">*</span>urb<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> status <span class="sy1">=</span> urb<span class="sy2">-</span><span class="sy1">&gt;</span>status<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tp <span class="sy1">=</span> urb<span class="sy2">-</span><span class="sy1">&gt;</span>context<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span>       dev_kfree_skb_irq<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_skb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>netif_device_present<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>status<span class="br0">&#41;</span>
    <span class="sy2">+</span>               dev_info<span class="br0">&#40;</span><span class="sy3">&amp;</span>urb<span class="sy2">-</span><span class="sy1">&gt;</span>dev<span class="sy2">-</span><span class="sy1">&gt;</span>dev, <span class="st0">&quot;%s: Tx status %d<span class="es1">\n</span>&quot;</span>,
    <span class="sy2">+</span>                        tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="sy2">-</span><span class="sy1">&gt;</span>name, status<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="sy2">-</span><span class="sy1">&gt;</span>trans_start <span class="sy1">=</span> jiffies<span class="sy4">;</span>
    <span class="sy2">+</span>       netif_wake_queue<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl8152_tx_timeout<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> net_device_stats <span class="sy2">*</span>stats <span class="sy1">=</span> rtl8152_get_stats<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       netif_warn<span class="br0">&#40;</span>tp, tx_err, netdev, <span class="st0">&quot;Tx timeout.<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       usb_unlink_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_urb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       stats<span class="sy2">-</span><span class="sy1">&gt;</span>tx_errors<span class="sy2">++</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl8152_set_rx_mode<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>speed <span class="sy3">&amp;</span> LINK_STATUS<span class="br0">&#41;</span>
    <span class="sy2">+</span>               set_bit<span class="br0">&#40;</span>RTL8152_SET_RX_MODE, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> _rtl8152_set_rx_mode<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       u32 tmp, mc_filter<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span><span class="sy4">;</span>  <span class="coMULTI">/* Multicast hash filter */</span>
    <span class="sy2">+</span>       u32 ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       clear_bit<span class="br0">&#40;</span>RTL8152_SET_RX_MODE, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       netif_stop_queue<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RCR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~RCR_ACPT_ALL<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> RCR_AB <span class="sy3">|</span> RCR_APM<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>netdev<span class="sy2">-</span><span class="sy1">&gt;</span>flags <span class="sy3">&amp;</span> IFF_PROMISC<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="coMULTI">/* Unconditionally log net taps. */</span>
    <span class="sy2">+</span>               netif_notice<span class="br0">&#40;</span>tp, link, netdev, <span class="st0">&quot;Promiscuous mode enabled<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy3">|</span><span class="sy1">=</span> RCR_AM <span class="sy3">|</span> RCR_AAP<span class="sy4">;</span>
    <span class="sy2">+</span>               mc_filter<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">=</span> mc_filter<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu12">0xffffffff</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>netdev_mc_count<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span> <span class="sy1">&gt;</span> multicast_filter_limit<span class="br0">&#41;</span> <span class="sy3">||</span>
    <span class="sy2">+</span>                  <span class="br0">&#40;</span>netdev<span class="sy2">-</span><span class="sy1">&gt;</span>flags <span class="sy3">&amp;</span> IFF_ALLMULTI<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="coMULTI">/* Too many to filter perfectly -- accept all multicasts. */</span>
    <span class="sy2">+</span>               ocp_data <span class="sy3">|</span><span class="sy1">=</span> RCR_AM<span class="sy4">;</span>
    <span class="sy2">+</span>               mc_filter<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">=</span> mc_filter<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu12">0xffffffff</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw4">struct</span> netdev_hw_addr <span class="sy2">*</span>ha<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>               mc_filter<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">=</span> mc_filter<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>               netdev_for_each_mc_addr<span class="br0">&#40;</span>ha, netdev<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       <span class="kw4">int</span> bit_nr <span class="sy1">=</span> ether_crc<span class="br0">&#40;</span>ETH_ALEN, ha<span class="sy2">-</span><span class="sy1">&gt;</span>addr<span class="br0">&#41;</span> <span class="sy1">&gt;&gt;</span> <span class="nu0">26</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       mc_filter<span class="br0">&#91;</span>bit_nr <span class="sy1">&gt;&gt;</span> <span class="nu0">5</span><span class="br0">&#93;</span> <span class="sy3">|</span><span class="sy1">=</span> <span class="nu0">1</span> <span class="sy1">&lt;&lt;</span> <span class="br0">&#40;</span>bit_nr <span class="sy3">&amp;</span> <span class="nu0">31</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       ocp_data <span class="sy3">|</span><span class="sy1">=</span> RCR_AM<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tmp <span class="sy1">=</span> mc_filter<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       mc_filter<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span> <span class="sy1">=</span> __cpu_to_le32<span class="br0">&#40;</span>swab32<span class="br0">&#40;</span>mc_filter<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       mc_filter<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span> <span class="sy1">=</span> __cpu_to_le32<span class="br0">&#40;</span>swab32<span class="br0">&#40;</span>tmp<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       pla_ocp_write<span class="br0">&#40;</span>tp, PLA_MAR, BYTE_EN_DWORD, <span class="kw3">sizeof</span><span class="br0">&#40;</span>mc_filter<span class="br0">&#41;</span>, mc_filter<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RCR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       netif_wake_queue<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> netdev_tx_t rtl8152_start_xmit<span class="br0">&#40;</span><span class="kw4">struct</span> sk_buff <span class="sy2">*</span>skb,
    <span class="sy2">+</span>                                           <span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> net_device_stats <span class="sy2">*</span>stats <span class="sy1">=</span> rtl8152_get_stats<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> tx_desc <span class="sy2">*</span>tx_desc<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> len, res<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       netif_stop_queue<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       len <span class="sy1">=</span> skb<span class="sy2">-</span><span class="sy1">&gt;</span>len<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>skb_header_cloned<span class="br0">&#40;</span>skb<span class="br0">&#41;</span> <span class="sy3">||</span> skb_headroom<span class="br0">&#40;</span>skb<span class="br0">&#41;</span> <span class="sy1">&lt;</span> <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="sy2">*</span>tx_desc<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw4">struct</span> sk_buff <span class="sy2">*</span>tx_skb<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>               tx_skb <span class="sy1">=</span> skb_copy_expand<span class="br0">&#40;</span>skb, <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="sy2">*</span>tx_desc<span class="br0">&#41;</span>, <span class="nu0">0</span>, GFP_ATOMIC<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               dev_kfree_skb_any<span class="br0">&#40;</span>skb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>tx_skb<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       stats<span class="sy2">-</span><span class="sy1">&gt;</span>tx_dropped<span class="sy2">++</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       netif_wake_queue<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="kw1">return</span> NETDEV_TX_OK<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>               skb <span class="sy1">=</span> tx_skb<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>       tx_desc <span class="sy1">=</span> <span class="br0">&#40;</span><span class="kw4">struct</span> tx_desc <span class="sy2">*</span><span class="br0">&#41;</span>skb_push<span class="br0">&#40;</span>skb, <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="sy2">*</span>tx_desc<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw3">memset</span><span class="br0">&#40;</span>tx_desc, <span class="nu0">0</span>, <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="sy2">*</span>tx_desc<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       tx_desc<span class="sy2">-</span><span class="sy1">&gt;</span>opts1 <span class="sy1">=</span> cpu_to_le32<span class="br0">&#40;</span><span class="br0">&#40;</span>len <span class="sy3">&amp;</span> TX_LEN_MASK<span class="br0">&#41;</span> <span class="sy3">|</span> TX_FS <span class="sy3">|</span> TX_LS<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_skb <span class="sy1">=</span> skb<span class="sy4">;</span>
    <span class="sy2">+</span>       skb_tx_timestamp<span class="br0">&#40;</span>skb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       usb_fill_bulk_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_urb, tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, usb_sndbulkpipe<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, <span class="nu0">2</span><span class="br0">&#41;</span>,
    <span class="sy2">+</span>                         skb<span class="sy2">-</span><span class="sy1">&gt;</span>data, skb<span class="sy2">-</span><span class="sy1">&gt;</span>len,
    <span class="sy2">+</span>                         <span class="br0">&#40;</span>usb_complete_t<span class="br0">&#41;</span>write_bulk_callback, tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       res <span class="sy1">=</span> usb_submit_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_urb, GFP_ATOMIC<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>res<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="coMULTI">/* Can we get/handle EPIPE here? */</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>res <span class="sy1">==</span> <span class="sy2">-</span>ENODEV<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       netif_device_detach<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       netif_warn<span class="br0">&#40;</span>tp, tx_err, netdev,
    <span class="sy2">+</span>                                  <span class="st0">&quot;failed tx_urb %d<span class="es1">\n</span>&quot;</span>, res<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       stats<span class="sy2">-</span><span class="sy1">&gt;</span>tx_errors<span class="sy2">++</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       netif_start_queue<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               stats<span class="sy2">-</span><span class="sy1">&gt;</span>tx_packets<span class="sy2">++</span><span class="sy4">;</span>
    <span class="sy2">+</span>               stats<span class="sy2">-</span><span class="sy1">&gt;</span>tx_bytes <span class="sy2">+</span><span class="sy1">=</span> skb<span class="sy2">-</span><span class="sy1">&gt;</span>len<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> NETDEV_TX_OK<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_reset_packet_filter<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_FMC<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~FMC_FCR_MCU_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_FMC, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> FMC_FCR_MCU_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_FMC, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl8152_nic_reset<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     i<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CR, CR_RST<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">1000</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span><span class="br0">&#40;</span>ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CR<span class="br0">&#41;</span> <span class="sy3">&amp;</span> CR_RST<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               udelay<span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw2">inline</span> u8 rtl8152_get_speed<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_PHYSTATUS<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_enable<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 speed<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       speed <span class="sy1">=</span> rtl8152_get_speed<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>speed <span class="sy3">&amp;</span> _100bps<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_EEEP_CR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~EEEP_CR_EEEP_TX<span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_EEEP_CR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_EEEP_CR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy3">|</span><span class="sy1">=</span> EEEP_CR_EEEP_TX<span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_EEEP_CR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152b_reset_packet_filter<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> CR_RE <span class="sy3">|</span> CR_TE<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MISC_1<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~RXDY_GATED_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MISC_1, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       usb_fill_bulk_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb, tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, usb_rcvbulkpipe<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, <span class="nu0">1</span><span class="br0">&#41;</span>,
    <span class="sy2">+</span>                     tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_skb<span class="sy2">-</span><span class="sy1">&gt;</span>data, RTL8152_RMS <span class="sy2">+</span> <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> rx_desc<span class="br0">&#41;</span>,
    <span class="sy2">+</span>                     <span class="br0">&#40;</span>usb_complete_t<span class="br0">&#41;</span>read_bulk_callback, tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> usb_submit_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb, GFP_KERNEL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl8152_disable<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     i<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RCR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~RCR_ACPT_ALL<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RCR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       usb_kill_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tx_urb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MISC_1<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> RXDY_GATED_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MISC_1, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">1000</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> FIFO_EMPTY<span class="br0">&#41;</span> <span class="sy1">==</span> FIFO_EMPTY<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               mdelay<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">1000</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_TCR0<span class="br0">&#41;</span> <span class="sy3">&amp;</span> TCR0_TX_EMPTY<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               mdelay<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       usb_kill_urb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_urb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       rtl8152_nic_reset<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_exit_oob<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     i<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RCR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~RCR_ACPT_ALL<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RCR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MISC_1<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> RXDY_GATED_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MISC_1, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CRWECR, CRWECR_NORAML<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CR, <span class="nu12">0x00</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~NOW_IS_OOB<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_SFF_STS_7<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~MCU_BORW_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_SFF_STS_7, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">1000</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> LINK_LIST_READY<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               mdelay<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_SFF_STS_7<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> RE_INIT_LL<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_SFF_STS_7, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">1000</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> LINK_LIST_READY<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               mdelay<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       rtl8152_nic_reset<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="coMULTI">/* rx share fifo credit full threshold */</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RXFIFO_CTRL0, RXFIFO_THR1_NORMAL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_DEV_STAT<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> STAT_SPEED_MASK<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>ocp_data <span class="sy1">==</span> STAT_SPEED_FULL<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="coMULTI">/* rx share fifo credit near full threshold */</span>
    <span class="sy2">+</span>               ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RXFIFO_CTRL1,
    <span class="sy2">+</span>                               RXFIFO_THR2_FULL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RXFIFO_CTRL2,
    <span class="sy2">+</span>                               RXFIFO_THR3_FULL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="coMULTI">/* rx share fifo credit near full threshold */</span>
    <span class="sy2">+</span>               ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RXFIFO_CTRL1,
    <span class="sy2">+</span>                               RXFIFO_THR2_HIGH<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RXFIFO_CTRL2,
    <span class="sy2">+</span>                               RXFIFO_THR3_HIGH<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="coMULTI">/* TX share fifo free credit full threshold */</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_TXFIFO_CTRL, TXFIFO_THR_NORMAL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_TX_AGG, TX_AGG_MAX_THRESHOLD<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_RX_BUF_TH, RX_BUF_THR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_TX_DMA,
    <span class="sy2">+</span>                       TEST_MODE_DISABLE <span class="sy3">|</span> TX_SIZE_ADJUST1<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CPCR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~CPCR_RX_VLAN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CPCR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RMS, RTL8152_RMS<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_TCR0<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> TCR0_AUTO_FIFO<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_TCR0, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_enter_oob<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     i<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~NOW_IS_OOB<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RXFIFO_CTRL0, RXFIFO_THR1_OOB<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RXFIFO_CTRL1, RXFIFO_THR2_OOB<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RXFIFO_CTRL2, RXFIFO_THR3_OOB<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       rtl8152_disable<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">1000</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> LINK_LIST_READY<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               mdelay<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_SFF_STS_7<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> RE_INIT_LL<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_SFF_STS_7, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">1000</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> LINK_LIST_READY<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               mdelay<span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RMS, RTL8152_RMS<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CFG_WOL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> MAGIC_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CFG_WOL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CPCR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> CPCR_RX_VLAN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CPCR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PAL_BDC_CR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> ALDPS_PROXY_MODE<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PAL_BDC_CR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> NOW_IS_OOB <span class="sy3">|</span> DIS_MCU_CLROOB<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_OOB_CTRL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_write_byte<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_CONFIG5, LAN_WAKE_EN<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MISC_1<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~RXDY_GATED_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MISC_1, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RCR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> RCR_APM <span class="sy3">|</span> RCR_AM <span class="sy3">|</span> RCR_AB<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_RCR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_disable_aldps<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_ALDPS_CONFIG, ENPDNPS <span class="sy3">|</span> LINKENA <span class="sy3">|</span> DIS_SDSAVE<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       msleep<span class="br0">&#40;</span><span class="nu0">20</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw2">inline</span> <span class="kw4">void</span> r8152b_enable_aldps<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_ALDPS_CONFIG, ENPWRSAVE <span class="sy3">|</span> ENPDNPS <span class="sy3">|</span>
    <span class="sy2">+</span>                                           LINKENA <span class="sy3">|</span> DIS_SDSAVE<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_set_speed<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp, u8 autoneg, u16 speed, u8 duplex<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u16 bmcr, anar<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> ret <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       cancel_delayed_work_sync<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>schedule<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       anar <span class="sy1">=</span> r8152_mdio_read<span class="br0">&#40;</span>tp, MII_ADVERTISE<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       anar <span class="sy3">&amp;</span><span class="sy1">=</span> ~<span class="br0">&#40;</span>ADVERTISE_10HALF <span class="sy3">|</span> ADVERTISE_10FULL <span class="sy3">|</span>
    <span class="sy2">+</span>                 ADVERTISE_100HALF <span class="sy3">|</span> ADVERTISE_100FULL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>autoneg <span class="sy1">==</span> AUTONEG_DISABLE<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>speed <span class="sy1">==</span> SPEED_10<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       bmcr <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_10HALF <span class="sy3">|</span> ADVERTISE_10FULL<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>speed <span class="sy1">==</span> SPEED_100<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       bmcr <span class="sy1">=</span> BMCR_SPEED100<span class="sy4">;</span>
    <span class="sy2">+</span>                       anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_100HALF <span class="sy3">|</span> ADVERTISE_100FULL<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       ret <span class="sy1">=</span> <span class="sy2">-</span>EINVAL<span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="kw1">goto</span> out<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>duplex <span class="sy1">==</span> DUPLEX_FULL<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       bmcr <span class="sy3">|</span><span class="sy1">=</span> BMCR_FULLDPLX<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>speed <span class="sy1">==</span> SPEED_10<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       <span class="kw1">if</span> <span class="br0">&#40;</span>duplex <span class="sy1">==</span> DUPLEX_FULL<span class="br0">&#41;</span>
    <span class="sy2">+</span>                               anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_10HALF <span class="sy3">|</span> ADVERTISE_10FULL<span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="kw1">else</span>
    <span class="sy2">+</span>                               anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_10HALF<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>speed <span class="sy1">==</span> SPEED_100<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       <span class="kw1">if</span> <span class="br0">&#40;</span>duplex <span class="sy1">==</span> DUPLEX_FULL<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                               anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_10HALF <span class="sy3">|</span> ADVERTISE_10FULL<span class="sy4">;</span>
    <span class="sy2">+</span>                               anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_100HALF <span class="sy3">|</span> ADVERTISE_100FULL<span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                               anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_10HALF<span class="sy4">;</span>
    <span class="sy2">+</span>                               anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_100HALF<span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="br0">&#125;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       ret <span class="sy1">=</span> <span class="sy2">-</span>EINVAL<span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="kw1">goto</span> out<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>               bmcr <span class="sy1">=</span> BMCR_ANENABLE <span class="sy3">|</span> BMCR_ANRESTART<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152_mdio_write<span class="br0">&#40;</span>tp, MII_ADVERTISE, anar<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       r8152_mdio_write<span class="br0">&#40;</span>tp, MII_BMCR, bmcr<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>out<span class="sy4">:</span>
    <span class="sy2">+</span>       schedule_delayed_work<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>schedule, <span class="nu0">5</span> <span class="sy2">*</span> HZ<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> ret<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl8152_down<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_UPS_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~POWER_CUT<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_UPS_CTRL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152b_disable_aldps<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       r8152b_enter_oob<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       r8152b_enable_aldps<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>version <span class="sy1">==</span> RTL_VER_01<span class="br0">&#41;</span>
    <span class="sy2">+</span>               rtl8152_set_speed<span class="br0">&#40;</span>tp, AUTONEG_ENABLE, SPEED_10, DUPLEX_FULL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> set_carrier<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev <span class="sy1">=</span> tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="sy4">;</span>
    <span class="sy2">+</span>       u8 speed<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       speed <span class="sy1">=</span> rtl8152_get_speed<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>speed <span class="sy3">&amp;</span> LINK_STATUS<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span><span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>speed <span class="sy3">&amp;</span> LINK_STATUS<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       rtl8152_enable<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       set_bit<span class="br0">&#40;</span>RTL8152_SET_RX_MODE, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       netif_carrier_on<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>speed <span class="sy3">&amp;</span> LINK_STATUS<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       netif_carrier_off<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>                       rtl8152_disable<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>speed <span class="sy1">=</span> speed<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl_work_func_t<span class="br0">&#40;</span><span class="kw4">struct</span> work_struct <span class="sy2">*</span>work<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> container_of<span class="br0">&#40;</span>work, <span class="kw4">struct</span> r8152, schedule.<span class="me1">work</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>netif_running<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> out1<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>test_bit<span class="br0">&#40;</span>RTL8152_UNPLUG, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> out1<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       set_carrier<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>test_bit<span class="br0">&#40;</span>RTL8152_SET_RX_MODE, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               _rtl8152_set_rx_mode<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       schedule_delayed_work<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>schedule, HZ<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>out1<span class="sy4">:</span>
    <span class="sy2">+</span>       <span class="kw1">return</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_open<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> res <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>speed <span class="sy1">=</span> rtl8152_get_speed<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>speed <span class="sy3">&amp;</span> LINK_STATUS<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               res <span class="sy1">=</span> rtl8152_enable<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               netif_carrier_on<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               netif_stop_queue<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               netif_carrier_off<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>res<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>res <span class="sy1">==</span> <span class="sy2">-</span>ENODEV<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       netif_device_detach<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>               netif_warn<span class="br0">&#40;</span>tp, rx_err, netdev,
    <span class="sy2">+</span>                          <span class="st0">&quot;rx_urb submit failed: %d<span class="es1">\n</span>&quot;</span>, res<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> res<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       rtl8152_set_speed<span class="br0">&#40;</span>tp, AUTONEG_ENABLE, SPEED_100, DUPLEX_FULL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       netif_start_queue<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       schedule_delayed_work<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>schedule, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> res<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_close<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> res <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       cancel_delayed_work_sync<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>schedule<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       netif_stop_queue<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       rtl8152_disable<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> res<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl_clear_bp<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_BP_0, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_BP_2, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_BP_4, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_BP_6, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_BP_0, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_BP_2, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_BP_4, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_BP_6, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       mdelay<span class="br0">&#40;</span><span class="nu0">3</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_BP_BA, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_BP_BA, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_enable_eee<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_EEE_CR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> EEE_RX_EN <span class="sy3">|</span> EEE_TX_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_EEE_CR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_EEE_CONFIG1, RG_TXLPI_MSK_HFDUP <span class="sy3">|</span> RG_MATCLR_EN <span class="sy3">|</span>
    <span class="sy2">+</span>                                          EEE_10_CAP <span class="sy3">|</span> EEE_NWAY_EN <span class="sy3">|</span>
    <span class="sy2">+</span>                                          TX_QUIET_EN <span class="sy3">|</span> RX_QUIET_EN <span class="sy3">|</span>
    <span class="sy2">+</span>                                          SDRISETIME <span class="sy3">|</span> RG_RXLPI_MSK_HFDUP <span class="sy3">|</span>
    <span class="sy2">+</span>                                          SDFALLTIME<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_EEE_CONFIG2, RG_LPIHYS_NUM <span class="sy3">|</span> RG_DACQUIET_EN <span class="sy3">|</span>
    <span class="sy2">+</span>                                          RG_LDVQUIET_EN <span class="sy3">|</span> RG_CKRSEL <span class="sy3">|</span>
    <span class="sy2">+</span>                                          RG_EEEPRG_EN<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_EEE_CONFIG3, FST_SNR_EYE_R <span class="sy3">|</span> RG_LFS_SEL <span class="sy3">|</span> MSK_PH<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_EEE_AR, FUN_ADDR <span class="sy3">|</span> DEVICE_ADDR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_EEE_DATA, EEE_ADDR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_EEE_AR, FUN_DATA <span class="sy3">|</span> DEVICE_ADDR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_EEE_DATA, EEE_DATA<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_reg_write<span class="br0">&#40;</span>tp, OCP_EEE_AR, <span class="nu12">0x0000</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_enable_fc<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u16 anar<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       anar <span class="sy1">=</span> r8152_mdio_read<span class="br0">&#40;</span>tp, MII_ADVERTISE<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       anar <span class="sy3">|</span><span class="sy1">=</span> ADVERTISE_PAUSE_CAP <span class="sy3">|</span> ADVERTISE_PAUSE_ASYM<span class="sy4">;</span>
    <span class="sy2">+</span>       r8152_mdio_write<span class="br0">&#40;</span>tp, MII_ADVERTISE, anar<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_hw_phy_cfg<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       r8152_mdio_write<span class="br0">&#40;</span>tp, MII_BMCR, BMCR_ANENABLE<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       r8152b_disable_aldps<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_init<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span>     i<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       rtl_clear_bp<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>version <span class="sy1">==</span> RTL_VER_01<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_LED_FEATURE<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~LED_MODE_MASK<span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_LED_FEATURE, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152b_hw_phy_cfg<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_UPS_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~POWER_CUT<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_UPS_CTRL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_PM_CTRL_STATUS<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~RWSUME_INDICATE<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_PM_CTRL_STATUS, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152b_exit_oob<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_PHY_PWR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> TX_10M_IDLE_EN <span class="sy3">|</span> PFM_PWM_SWITCH<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_PHY_PWR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MAC_PWR_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~MCU_CLK_RATIO_MASK<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> MCU_CLK_RATIO <span class="sy3">|</span> D3_CLK_GATED_EN<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_dword<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_MAC_PWR_CTRL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> GPHY_STS_MSK <span class="sy3">|</span> SPEED_DOWN_MSK <span class="sy3">|</span>
    <span class="sy2">+</span>                  SPDWN_RXDV_MSK <span class="sy3">|</span> SPDWN_LINKCHG_MSK<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_GPHY_INTR_IMR, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152b_enable_eee<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       r8152b_enable_aldps<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       r8152b_enable_fc<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152_mdio_write<span class="br0">&#40;</span>tp, MII_BMCR, BMCR_RESET <span class="sy3">|</span> BMCR_ANENABLE <span class="sy3">|</span>
    <span class="sy2">+</span>                                      BMCR_ANRESTART<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span> i <span class="sy1">&lt;</span> <span class="nu0">100</span><span class="sy4">;</span> i<span class="sy2">++</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               udelay<span class="br0">&#40;</span><span class="nu0">100</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span><span class="br0">&#40;</span>r8152_mdio_read<span class="br0">&#40;</span>tp, MII_BMCR<span class="br0">&#41;</span> <span class="sy3">&amp;</span> BMCR_RESET<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="coMULTI">/* disable rx aggregation */</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_USB_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">|</span><span class="sy1">=</span> RX_AGG_DISABLE<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_USB_CTRL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_suspend<span class="br0">&#40;</span><span class="kw4">struct</span> usb_interface <span class="sy2">*</span>intf, pm_message_t message<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> usb_get_intfdata<span class="br0">&#40;</span>intf<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       netif_device_detach<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>netif_running<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               cancel_delayed_work_sync<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>schedule<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       rtl8152_down<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_resume<span class="br0">&#40;</span><span class="kw4">struct</span> usb_interface <span class="sy2">*</span>intf<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> usb_get_intfdata<span class="br0">&#40;</span>intf<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152b_init<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       netif_device_attach<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>netif_running<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               rtl8152_enable<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               rtl8152_set_speed<span class="br0">&#40;</span>tp, AUTONEG_ENABLE, SPEED_100, DUPLEX_FULL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               set_bit<span class="br0">&#40;</span>RTL8152_SET_RX_MODE, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               schedule_delayed_work<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>schedule, <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl8152_get_drvinfo<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev,
    <span class="sy2">+</span>                               <span class="kw4">struct</span> ethtool_drvinfo <span class="sy2">*</span>info<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw3">strncpy</span><span class="br0">&#40;</span>info<span class="sy2">-</span><span class="sy1">&gt;</span>driver, MODULENAME, ETHTOOL_BUSINFO_LEN<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw3">strncpy</span><span class="br0">&#40;</span>info<span class="sy2">-</span><span class="sy1">&gt;</span>version, DRIVER_VERSION, ETHTOOL_BUSINFO_LEN<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       usb_make_path<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev, info<span class="sy2">-</span><span class="sy1">&gt;</span>bus_info, <span class="kw3">sizeof</span><span class="br0">&#40;</span>info<span class="sy2">-</span><span class="sy1">&gt;</span>bus_info<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span>
    <span class="sy2">+</span><span class="kw4">int</span> rtl8152_get_settings<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev, <span class="kw4">struct</span> ethtool_cmd <span class="sy2">*</span>cmd<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii.<span class="me1">mdio_read</span><span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>EOPNOTSUPP<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> mii_ethtool_gset<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii, cmd<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_set_settings<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>dev, <span class="kw4">struct</span> ethtool_cmd <span class="sy2">*</span>cmd<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>dev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> rtl8152_set_speed<span class="br0">&#40;</span>tp, cmd<span class="sy2">-</span><span class="sy1">&gt;</span>autoneg, cmd<span class="sy2">-</span><span class="sy1">&gt;</span>speed, cmd<span class="sy2">-</span><span class="sy1">&gt;</span>duplex<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">struct</span> ethtool_ops ops <span class="sy1">=</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>       .<span class="me1">get_drvinfo</span> <span class="sy1">=</span> rtl8152_get_drvinfo,
    <span class="sy2">+</span>       .<span class="me1">get_settings</span> <span class="sy1">=</span> rtl8152_get_settings,
    <span class="sy2">+</span>       .<span class="me1">set_settings</span> <span class="sy1">=</span> rtl8152_set_settings,
    <span class="sy2">+</span>       .<span class="me1">get_link</span> <span class="sy1">=</span> ethtool_op_get_link,
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_ioctl<span class="br0">&#40;</span><span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev, <span class="kw4">struct</span> ifreq <span class="sy2">*</span>rq, <span class="kw4">int</span> cmd<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> mii_ioctl_data <span class="sy2">*</span>data <span class="sy1">=</span> if_mii<span class="br0">&#40;</span>rq<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">int</span> res <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">switch</span> <span class="br0">&#40;</span>cmd<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> SIOCGMIIPHY<span class="sy4">:</span>
    <span class="sy2">+</span>               data<span class="sy2">-</span><span class="sy1">&gt;</span>phy_id <span class="sy1">=</span> R8152_PHY_ID<span class="sy4">;</span> <span class="coMULTI">/* Internal PHY */</span>
    <span class="sy2">+</span>               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> SIOCGMIIREG<span class="sy4">:</span>
    <span class="sy2">+</span>               data<span class="sy2">-</span><span class="sy1">&gt;</span>val_out <span class="sy1">=</span> r8152_mdio_read<span class="br0">&#40;</span>tp, data<span class="sy2">-</span><span class="sy1">&gt;</span>reg_num<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> SIOCSMIIREG<span class="sy4">:</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>capable<span class="br0">&#40;</span>CAP_NET_ADMIN<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>                       res <span class="sy1">=</span> <span class="sy2">-</span>EPERM<span class="sy4">;</span>
    <span class="sy2">+</span>                       <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="br0">&#125;</span>
    <span class="sy2">+</span>               r8152_mdio_write<span class="br0">&#40;</span>tp, data<span class="sy2">-</span><span class="sy1">&gt;</span>reg_num, data<span class="sy2">-</span><span class="sy1">&gt;</span>val_in<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">default</span><span class="sy4">:</span>
    <span class="sy2">+</span>               res <span class="sy1">=</span> <span class="sy2">-</span>EOPNOTSUPP<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> res<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">const</span> <span class="kw4">struct</span> net_device_ops rtl8152_netdev_ops <span class="sy1">=</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>       .<span class="me1">ndo_open</span>               <span class="sy1">=</span> rtl8152_open,
    <span class="sy2">+</span>       .<span class="me1">ndo_stop</span>               <span class="sy1">=</span> rtl8152_close,
    <span class="sy2">+</span>       .<span class="me1">ndo_do_ioctl</span>           <span class="sy1">=</span> rtl8152_ioctl,
    <span class="sy2">+</span>       .<span class="me1">ndo_start_xmit</span>         <span class="sy1">=</span> rtl8152_start_xmit,
    <span class="sy2">+</span>       .<span class="me1">ndo_tx_timeout</span>         <span class="sy1">=</span> rtl8152_tx_timeout,
    <span class="sy2">+</span>       .<span class="me1">ndo_set_rx_mode</span>        <span class="sy1">=</span> rtl8152_set_rx_mode,
    <span class="sy2">+</span>       .<span class="me1">ndo_set_mac_address</span>    <span class="sy1">=</span> rtl8152_set_mac_address,
    <span class="sy2">+</span>
    <span class="sy2">+</span>       .<span class="me1">ndo_change_mtu</span>         <span class="sy1">=</span> eth_change_mtu,
    <span class="sy2">+</span>       .<span class="me1">ndo_validate_addr</span>      <span class="sy1">=</span> eth_validate_addr,
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> r8152b_get_version<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>       u16     version<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_PLA, PLA_TCR1<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       version <span class="sy1">=</span> <span class="br0">&#40;</span>u16<span class="br0">&#41;</span><span class="br0">&#40;</span>ocp_data <span class="sy3">&amp;</span> VERSION_MASK<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">switch</span> <span class="br0">&#40;</span>version<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> <span class="nu12">0x4c00</span><span class="sy4">:</span>
    <span class="sy2">+</span>               tp<span class="sy2">-</span><span class="sy1">&gt;</span>version <span class="sy1">=</span> RTL_VER_01<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">case</span> <span class="nu12">0x4c10</span><span class="sy4">:</span>
    <span class="sy2">+</span>               tp<span class="sy2">-</span><span class="sy1">&gt;</span>version <span class="sy1">=</span> RTL_VER_02<span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">default</span><span class="sy4">:</span>
    <span class="sy2">+</span>               netif_info<span class="br0">&#40;</span>tp, probe, tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev,
    <span class="sy2">+</span>                          <span class="st0">&quot;Unknown version 0x%04x<span class="es1">\n</span>&quot;</span>, version<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">break</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> rtl8152_probe<span class="br0">&#40;</span><span class="kw4">struct</span> usb_interface <span class="sy2">*</span>intf,
    <span class="sy2">+</span>                        <span class="kw4">const</span> <span class="kw4">struct</span> usb_device_id <span class="sy2">*</span>id<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> usb_device <span class="sy2">*</span>udev <span class="sy1">=</span> interface_to_usbdev<span class="br0">&#40;</span>intf<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> net_device <span class="sy2">*</span>netdev<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>udev<span class="sy2">-</span><span class="sy1">&gt;</span>actconfig<span class="sy2">-</span><span class="sy1">&gt;</span>desc.<span class="me1">bConfigurationValue</span> <span class="sy3">!</span><span class="sy1">=</span> <span class="nu0">1</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               usb_driver_set_configuration<span class="br0">&#40;</span>udev, <span class="nu0">1</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>ENODEV<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       netdev <span class="sy1">=</span> alloc_etherdev<span class="br0">&#40;</span><span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> r8152<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>netdev<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               dev_err<span class="br0">&#40;</span><span class="sy3">&amp;</span>intf<span class="sy2">-</span><span class="sy1">&gt;</span>dev, <span class="st0">&quot;Out of memory&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">return</span> <span class="sy2">-</span>ENOMEM<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tp <span class="sy1">=</span> netdev_priv<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>msg_enable <span class="sy1">=</span> <span class="nu12">0x7FFF</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tasklet_init<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tl, rx_fixup, <span class="br0">&#40;</span><span class="kw4">unsigned</span> <span class="kw4">long</span><span class="br0">&#41;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       INIT_DELAYED_WORK<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>schedule, rtl_work_func_t<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>udev <span class="sy1">=</span> udev<span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev <span class="sy1">=</span> netdev<span class="sy4">;</span>
    <span class="sy2">+</span>       netdev<span class="sy2">-</span><span class="sy1">&gt;</span>netdev_ops <span class="sy1">=</span> <span class="sy3">&amp;</span>rtl8152_netdev_ops<span class="sy4">;</span>
    <span class="sy2">+</span>       netdev<span class="sy2">-</span><span class="sy1">&gt;</span>watchdog_timeo <span class="sy1">=</span> RTL8152_TX_TIMEOUT<span class="sy4">;</span>
    <span class="sy2">+</span>       netdev<span class="sy2">-</span><span class="sy1">&gt;</span>features <span class="sy3">&amp;</span><span class="sy1">=</span> ~NETIF_F_IP_CSUM<span class="sy4">;</span>
    <span class="sy2">+</span>       SET_ETHTOOL_OPS<span class="br0">&#40;</span>netdev, <span class="sy3">&amp;</span>ops<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>speed <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii.<span class="me1">dev</span> <span class="sy1">=</span> netdev<span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii.<span class="me1">mdio_read</span> <span class="sy1">=</span> read_mii_word<span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii.<span class="me1">mdio_write</span> <span class="sy1">=</span> write_mii_word<span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii.<span class="me1">phy_id_mask</span> <span class="sy1">=</span> <span class="nu12">0x3f</span><span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii.<span class="me1">reg_num_mask</span> <span class="sy1">=</span> <span class="nu12">0x1f</span><span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii.<span class="me1">phy_id</span> <span class="sy1">=</span> R8152_PHY_ID<span class="sy4">;</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>mii.<span class="me1">supports_gmii</span> <span class="sy1">=</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       r8152b_get_version<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       r8152b_init<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       set_ethernet_addr<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>alloc_all_urbs<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               netif_err<span class="br0">&#40;</span>tp, probe, netdev, <span class="st0">&quot;out of memory&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> out<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_skb <span class="sy1">=</span> netdev_alloc_skb<span class="br0">&#40;</span>netdev,
    <span class="sy2">+</span>                       RTL8152_RMS <span class="sy2">+</span> <span class="kw3">sizeof</span><span class="br0">&#40;</span><span class="kw4">struct</span> rx_desc<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy3">!</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_skb<span class="br0">&#41;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> out1<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       usb_set_intfdata<span class="br0">&#40;</span>intf, tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       SET_NETDEV_DEV<span class="br0">&#40;</span>netdev, <span class="sy3">&amp;</span>intf<span class="sy2">-</span><span class="sy1">&gt;</span>dev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>register_netdev<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span> <span class="sy3">!</span><span class="sy1">=</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               netif_err<span class="br0">&#40;</span>tp, probe, netdev, <span class="st0">&quot;couldn't register the device&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">goto</span> out2<span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       netif_info<span class="br0">&#40;</span>tp, probe, netdev, <span class="st0">&quot;%s&quot;</span>, PATENTS<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="nu0">0</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>out2<span class="sy4">:</span>
    <span class="sy2">+</span>       usb_set_intfdata<span class="br0">&#40;</span>intf, <span class="kw2">NULL</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       dev_kfree_skb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_skb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>out1<span class="sy4">:</span>
    <span class="sy2">+</span>       free_all_urbs<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>out<span class="sy4">:</span>
    <span class="sy2">+</span>       free_netdev<span class="br0">&#40;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> <span class="sy2">-</span>EIO<span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl8152_unload<span class="br0">&#40;</span><span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       u32     ocp_data<span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>version <span class="sy3">!</span><span class="sy1">=</span> RTL_VER_01<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_UPS_CTRL<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_data <span class="sy3">|</span><span class="sy1">=</span> POWER_CUT<span class="sy4">;</span>
    <span class="sy2">+</span>               ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_UPS_CTRL, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       ocp_data <span class="sy1">=</span> ocp_read_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_PM_CTRL_STATUS<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_data <span class="sy3">&amp;</span><span class="sy1">=</span> ~RWSUME_INDICATE<span class="sy4">;</span>
    <span class="sy2">+</span>       ocp_write_word<span class="br0">&#40;</span>tp, MCU_TYPE_USB, USB_PM_CTRL_STATUS, ocp_data<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> rtl8152_disconnect<span class="br0">&#40;</span><span class="kw4">struct</span> usb_interface <span class="sy2">*</span>intf<span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw4">struct</span> r8152 <span class="sy2">*</span>tp <span class="sy1">=</span> usb_get_intfdata<span class="br0">&#40;</span>intf<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>       usb_set_intfdata<span class="br0">&#40;</span>intf, <span class="kw2">NULL</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="kw1">if</span> <span class="br0">&#40;</span>tp<span class="br0">&#41;</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>               set_bit<span class="br0">&#40;</span>RTL8152_UNPLUG, <span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>flags<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               tasklet_kill<span class="br0">&#40;</span><span class="sy3">&amp;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>tl<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               unregister_netdev<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               rtl8152_unload<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               free_all_urbs<span class="br0">&#40;</span>tp<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               <span class="kw1">if</span> <span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_skb<span class="br0">&#41;</span>
    <span class="sy2">+</span>                       dev_kfree_skb<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>rx_skb<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>               free_netdev<span class="br0">&#40;</span>tp<span class="sy2">-</span><span class="sy1">&gt;</span>netdev<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>       <span class="br0">&#125;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="coMULTI">/* table of devices that work with this driver */</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">struct</span> usb_device_id rtl8152_table<span class="br0">&#91;</span><span class="br0">&#93;</span> <span class="sy1">=</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="br0">&#123;</span>USB_DEVICE<span class="br0">&#40;</span>VENDOR_ID_REALTEK, PRODUCT_ID_RTL8152<span class="br0">&#41;</span><span class="br0">&#125;</span>,
    <span class="sy2">+</span>       <span class="br0">&#123;</span><span class="br0">&#125;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>MODULE_DEVICE_TABLE<span class="br0">&#40;</span>usb, rtl8152_table<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">struct</span> usb_driver rtl8152_driver <span class="sy1">=</span> <span class="br0">&#123;</span>
    <span class="sy2">+</span>       .<span class="me1">name</span> <span class="sy1">=</span>         MODULENAME,
    <span class="sy2">+</span>       .<span class="me1">probe</span> <span class="sy1">=</span>        rtl8152_probe,
    <span class="sy2">+</span>       .<span class="me1">disconnect</span> <span class="sy1">=</span>   rtl8152_disconnect,
    <span class="sy2">+</span>       .<span class="me1">id_table</span> <span class="sy1">=</span>     rtl8152_table,
    <span class="sy2">+</span>       .<span class="me1">suspend</span> <span class="sy1">=</span>      rtl8152_suspend,
    <span class="sy2">+</span>       .<span class="me1">resume</span> <span class="sy1">=</span>       rtl8152_resume
    <span class="sy2">+</span><span class="br0">&#125;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">int</span> __init usb_rtl8152_init<span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       <span class="kw1">return</span> usb_register<span class="br0">&#40;</span><span class="sy3">&amp;</span>rtl8152_driver<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span><span class="kw4">static</span> <span class="kw4">void</span> __exit usb_rtl8152_exit<span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span>
    <span class="sy2">+</span><span class="br0">&#123;</span>
    <span class="sy2">+</span>       usb_deregister<span class="br0">&#40;</span><span class="sy3">&amp;</span>rtl8152_driver<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span><span class="br0">&#125;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>module_init<span class="br0">&#40;</span>usb_rtl8152_init<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>module_exit<span class="br0">&#40;</span>usb_rtl8152_exit<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>
    <span class="sy2">+</span>MODULE_AUTHOR<span class="br0">&#40;</span>DRIVER_AUTHOR<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>MODULE_DESCRIPTION<span class="br0">&#40;</span>DRIVER_DESC<span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">+</span>MODULE_LICENSE<span class="br0">&#40;</span><span class="st0">&quot;GPL&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span>
    <span class="sy2">--</span> 
    1.8.1.4
&nbsp;
    <span class="sy2">--</span>
    To unsubscribe from <span class="kw3">this</span> list<span class="sy4">:</span> send the line <span class="st0">&quot;unsubscribe linux-kernel&quot;</span> in
    the body of a message to majordomo@vger.<span class="me1">kernel</span>.<span class="me1">org</span>
    More majordomo info at  <span class="br0">&#91;</span>http<span class="sy4">:</span><span class="co1">//vger.kernel.org/majordomo-info.html][2]</span>
    Please read the FAQ at  <span class="br0">&#91;</span>http<span class="sy4">:</span><span class="co1">//www.tux.org/lkml/][3]</span>
&nbsp;
<span class="br0">&#91;</span><span class="nu0">0</span><span class="br0">&#93;</span><span class="sy4">:</span> http<span class="sy4">:</span><span class="co1">//mid.gmane.org/%3C1366965948-1805-1-git-send-email-hayeswang%40realtek.com%3E</span>
<span class="br0">&#91;</span><span class="nu0">1</span><span class="br0">&#93;</span><span class="sy4">:</span> http<span class="sy4">:</span><span class="co1">//news.gmane.org/find-root.php?message_id=%3C1366965948-1805-1-git-send-email-hayeswang%40realtek.com%3E</span>
<span class="br0">&#91;</span><span class="nu0">2</span><span class="br0">&#93;</span><span class="sy4">:</span> http<span class="sy4">:</span><span class="co1">//vger.kernel.org/majordomo-info.html</span>
<span class="br0">&#91;</span><span class="nu0">3</span><span class="br0">&#93;</span><span class="sy4">:</span> http<span class="sy4">:</span><span class="co1">//www.tux.org/lkml/</span>