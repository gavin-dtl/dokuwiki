a:130:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:15:"字符串操作";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:357:"
strlen                     //长度测量
strcpy/strncpy         //拷贝
strcat/strncat         //连接
strcmp/strncmp     //比较
strchr                   //字符匹配函数
strstr                   //字符串匹配
memset               //空间设定函数
atoi/atol/atof        //字符串转换功能
strtok                  //字符串分割数
";i:1;s:1:"c";i:2;N;}i:2;i:34;}i:4;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:405;}i:5;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"strtok 字符串切割函数";i:1;i:3;i:2;i:405;}i:2;i:405;}i:6;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:405;}i:7;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:405;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:"char *strtok(char s[], const char *delim);";}i:2;i:444;}i:9;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:486;}i:10;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:486;}i:11;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:486;}i:12;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:486;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:" 功能：strtok()用来将字符串分割成一个个片段。";}i:2;i:490;}i:14;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:553;}i:15;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:553;}i:16;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:553;}i:17;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:553;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" 参数1：s指向欲分割的字符串";}i:2;i:557;}i:19;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:596;}i:20;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:596;}i:21;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:596;}i:22;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:596;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" 参数2：delim则为分割字符串中包含的所有字符。";}i:2;i:600;}i:24;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:664;}i:25;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:664;}i:26;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:664;}i:27;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:664;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:333:" 当strtok()在参数s的字符串中发现参数delim中包含的分割字符时,则会将该字符改为\0 字符，当连续出现多个时只替换第一个为\0。在第一次调用时：strtok()必需给予参数s字符串,往后的调用则将参数s设置成NULL，每次调用成功则返回指向被分割出片段的指针";}i:2;i:668;}i:29;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1001;}i:30;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1001;}i:31;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1001;}i:32;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1003;}i:33;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"格式化字符串操作函数";i:1;i:3;i:2;i:1003;}i:2;i:1003;}i:34;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:1003;}i:35;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1044;}i:36;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:36:"输出到buf指定的内存区域。";i:1;i:4;i:2;i:1044;}i:2;i:1044;}i:37;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1044;}i:38;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:49:"int sprintf(char *buf, const char *format, …); ";i:1;s:1:"c";i:2;N;}i:2;i:1094;}i:39;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1094;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"例：";}i:2;i:1154;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1166;}i:42;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:50:"
char buf[20];
sprintf(buf,"%d:%d:%d",2013,10,1);
";i:1;s:1:"c";i:2;N;}i:2;i:1166;}i:43;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1228;}i:44;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:42:"从buf指定的内存区域中读入信息";i:1;i:4;i:2;i:1228;}i:2;i:1228;}i:45;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1228;}i:46;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:52:"int sscanf(const char *buf,const char *format, …);";i:1;s:1:"c";i:2;N;}i:2;i:1284;}i:47;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1284;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"例：int a, b, c;";}i:2;i:1347;}i:49;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1371;}i:50;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:43:"sscanf("2013:10:1", "%d:%d:%d", &a, &b, &c)";i:1;s:1:"c";i:2;N;}i:2;i:1371;}i:51;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1428;}i:52;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:18:"sscanf高级用法";i:1;i:4;i:2;i:1428;}i:2;i:1428;}i:53;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:4;}i:2;i:1428;}i:54;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1454;}i:55;a:3:{i:0;s:13:"listitem_open";i:1;a:2:{i:0;i:1;i:1;i:1;}i:2;i:1454;}i:56;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1454;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" 跳过数据：%*s或%*d";}i:2;i:1458;}i:58;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1483;}i:59;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1483;}i:60;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:1483;}i:61;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1483;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 例：sscanf(";}i:2;i:1489;}i:63;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1503;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"1234 5678";}i:2;i:1504;}i:65;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1513;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:", ";}i:2;i:1514;}i:67;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1516;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"%*d %s";}i:2;i:1517;}i:69;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1523;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:", buf);";}i:2;i:1524;}i:71;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1531;}i:72;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1531;}i:73;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1531;}i:74;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1531;}i:75;a:3:{i:0;s:13:"listitem_open";i:1;a:2:{i:0;i:1;i:1;i:1;}i:2;i:1531;}i:76;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1531;}i:77;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" 读指定宽度的数据：%[width]s";}i:2;i:1535;}i:78;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1572;}i:79;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1572;}i:80;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:1572;}i:81;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1572;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"例：sscanf(";}i:2;i:1578;}i:83;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1591;}i:84;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"12345678";}i:2;i:1592;}i:85;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1600;}i:86;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:", ";}i:2;i:1601;}i:87;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1603;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"%4s";}i:2;i:1604;}i:89;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1607;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:", buf);";}i:2;i:1608;}i:91;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1615;}i:92;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1615;}i:93;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1615;}i:94;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1615;}i:95;a:3:{i:0;s:13:"listitem_open";i:1;a:2:{i:0;i:1;i:1;i:1;}i:2;i:1615;}i:96;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1615;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" 支持集合操作：";}i:2;i:1619;}i:98;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1641;}i:99;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:1641;}i:100;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:1641;}i:101;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1641;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:" %[a-z]       表示匹配a到z中任意字符(尽可能多的匹配)";}i:2;i:1647;}i:103;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1716;}i:104;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1716;}i:105;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:1716;}i:106;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1716;}i:107;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:" %[aBc]      匹配a、B、c中一员，贪婪性";}i:2;i:1722;}i:108;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1771;}i:109;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1771;}i:110;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:1771;}i:111;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1771;}i:112;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:" %[^a]       匹配非a的任意字符，贪婪性";}i:2;i:1777;}i:113;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1827;}i:114;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1827;}i:115;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:1827;}i:116;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1827;}i:117;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:" %*[^a] a   匹配非a的任意字符，忽略掉a字符前的，再把a忽略";}i:2;i:1833;}i:118;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1911;}i:119;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1911;}i:120;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:2;}i:2;i:1911;}i:121;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:1911;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:52:" %[^a-z]     表示读取除a-z以外的所有字符";}i:2;i:1917;}i:123;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:1969;}i:124;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1969;}i:125;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1969;}i:126;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:1969;}i:127;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:1969;}i:128;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1970;}i:129;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:1970;}}