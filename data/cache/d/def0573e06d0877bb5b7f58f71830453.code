<span class="co2">#include &lt;stdio.h&gt;</span>
<span class="co2">#include &lt;stdlib.h&gt;</span>
<span class="co2">#include &lt;string.h&gt;</span>
<span class="co2">#include &lt;assert.h&gt;</span>
&nbsp;
<span class="co2">#include &lt;getopt.h&gt; </span>
&nbsp;
<span class="co2">#include &lt;fcntl.h&gt; </span>
<span class="co2">#include &lt;unistd.h&gt;</span>
<span class="co2">#include &lt;errno.h&gt;</span>
<span class="co2">#include &lt;malloc.h&gt;</span>
<span class="co2">#include &lt;sys/stat.h&gt;</span>
<span class="co2">#include &lt;sys/types.h&gt;</span>
<span class="co2">#include &lt;sys/time.h&gt;</span>
<span class="co2">#include &lt;sys/mman.h&gt;</span>
<span class="co2">#include &lt;sys/ioctl.h&gt;</span>
&nbsp;
<span class="co2">#include &lt;asm/types.h&gt; </span>
<span class="co2">#include &lt;linux/videodev2.h&gt;</span>
&nbsp;
<span class="co2">#define CLEAR(x) memset (&amp;(x), 0, sizeof (x))</span>
&nbsp;
<span class="kw4">struct</span> buffer <span class="br0">&#123;</span>
        <span class="kw4">void</span> <span class="sy0">*</span> start<span class="sy0">;</span>
        <span class="kw4">size_t</span> length<span class="sy0">;</span>
<span class="br0">&#125;</span><span class="sy0">;</span>
&nbsp;
<span class="kw4">static</span> <span class="kw4">char</span> <span class="sy0">*</span> dev_name <span class="sy0">=</span> <span class="st0">&quot;/dev/video0&quot;</span><span class="sy0">;</span><span class="co1">//摄像头设备名</span>
<span class="kw4">static</span> <span class="kw4">int</span> fd <span class="sy0">=</span> <span class="sy0">-</span><span class="nu0">1</span><span class="sy0">;</span>
<span class="kw4">struct</span> buffer <span class="sy0">*</span> buffers <span class="sy0">=</span> NULL<span class="sy0">;</span>
<span class="kw4">static</span> <span class="kw4">unsigned</span> <span class="kw4">int</span> n_buffers <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp;
FILE <span class="sy0">*</span>file_fd<span class="sy0">;</span>
<span class="kw4">static</span> <span class="kw4">unsigned</span> <span class="kw4">long</span> file_length<span class="sy0">;</span>
<span class="kw4">static</span> <span class="kw4">unsigned</span> <span class="kw4">char</span> <span class="sy0">*</span>file_name<span class="sy0">;</span>
<span class="co1">//////////////////////////////////////////////////////</span>
<span class="co1">//获取一帧数据</span>
<span class="co1">//////////////////////////////////////////////////////</span>
<span class="kw4">static</span> <span class="kw4">int</span> read_frame <span class="br0">&#40;</span><span class="kw4">void</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw4">struct</span> v4l2_buffer buf<span class="sy0">;</span>
    <span class="kw4">unsigned</span> <span class="kw4">int</span> i<span class="sy0">;</span>
&nbsp;
    CLEAR <span class="br0">&#40;</span>buf<span class="br0">&#41;</span><span class="sy0">;</span>
    buf.<span class="me1">type</span> <span class="sy0">=</span> V4L2_BUF_TYPE_VIDEO_CAPTURE<span class="sy0">;</span>
    buf.<span class="me1">memory</span> <span class="sy0">=</span> V4L2_MEMORY_MMAP<span class="sy0">;</span>
<span class="coMULTI">/*8.出队列以取得已采集数据的帧缓冲，取得原始采集数据。VIDIOC_DQBUF*/</span>
    <span class="kw4">int</span> ff <span class="sy0">=</span> ioctl <span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_DQBUF<span class="sy0">,</span> <span class="sy0">&amp;</span>buf<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>ff<span class="sy0">&lt;</span><span class="nu0">0</span><span class="br0">&#41;</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;failture<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//出列采集的帧缓冲</span>
&nbsp;
    <a href="http://www.opengroup.org/onlinepubs/009695399/functions/assert.html"><span class="kw3">assert</span></a> <span class="br0">&#40;</span>buf.<span class="me1">index</span> <span class="sy0">&lt;</span> n_buffers<span class="br0">&#41;</span><span class="sy0">;</span>
       <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a> <span class="br0">&#40;</span><span class="st0">&quot;buf.index dq is %d,<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>buf.<span class="me1">index</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <a href="http://www.opengroup.org/onlinepubs/009695399/functions/fwrite.html"><span class="kw3">fwrite</span></a><span class="br0">&#40;</span>buffers<span class="br0">&#91;</span>buf.<span class="me1">index</span><span class="br0">&#93;</span>.<span class="me1">start</span><span class="sy0">,</span> buffers<span class="br0">&#91;</span>buf.<span class="me1">index</span><span class="br0">&#93;</span>.<span class="me1">length</span><span class="sy0">,</span> <span class="nu0">1</span><span class="sy0">,</span> file_fd<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//将其写入文件中</span>
<span class="coMULTI">/*9.将缓冲重新入队列尾,这样可以循环采集。VIDIOC_QBUF*/</span> 
    ff<span class="sy0">=</span>ioctl <span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_QBUF<span class="sy0">,</span> <span class="sy0">&amp;</span>buf<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//再将其入列</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>ff<span class="sy0">&lt;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="co1">//把数据从缓存中读取出来</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;failture VIDIOC_QBUF<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">return</span> <span class="nu0">1</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="kw4">int</span> main <span class="br0">&#40;</span><span class="kw4">int</span> argc<span class="sy0">,</span><span class="kw4">char</span> <span class="sy0">**</span> argv<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw4">struct</span> v4l2_capability cap<span class="sy0">;</span>
    <span class="kw4">struct</span> v4l2_format fmt<span class="sy0">;</span>
    <span class="kw4">unsigned</span> <span class="kw4">int</span> i<span class="sy0">;</span>
    <span class="kw2">enum</span> v4l2_buf_type type<span class="sy0">;</span>
&nbsp;
    file_fd <span class="sy0">=</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/fopen.html"><span class="kw3">fopen</span></a><span class="br0">&#40;</span><span class="st0">&quot;test-mmap.jpg&quot;</span><span class="sy0">,</span> <span class="st0">&quot;w&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><span class="co1">//图片文件名</span>
<span class="coMULTI">/*1.打开设备文件。 int fd=open(”/dev/video0″,O_RDWR);*********/</span>
    fd <span class="sy0">=</span> open <span class="br0">&#40;</span>dev_name<span class="sy0">,</span> O_RDWR <span class="coMULTI">/* required */</span> <span class="sy0">|</span> O_NONBLOCK<span class="sy0">,</span> <span class="nu0">0</span><span class="br0">&#41;</span><span class="sy0">;</span><span class="co1">//打开设备</span>
&nbsp;
<span class="coMULTI">/*2.取得设备的capability，看看设备具有什么功能，比如是否具有视频输入,或者音频输入输出等。VIDIOC_QUERYCAP,struct v4l2_capability*/</span>
    <span class="kw4">int</span> ff<span class="sy0">=</span>ioctl <span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_QUERYCAP<span class="sy0">,</span> <span class="sy0">&amp;</span>cap<span class="br0">&#41;</span><span class="sy0">;</span><span class="co1">//获取摄像头参数</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>ff<span class="sy0">&lt;</span><span class="nu0">0</span><span class="br0">&#41;</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;failture VIDIOC_QUERYCAP<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
<span class="coMULTI">/*3.设置视频的制式和帧格式，制式包括PAL，NTSC，帧的格式个包括宽度和高度等。*/</span>
        <span class="kw4">struct</span> v4l2_fmtdesc fmt1<span class="sy0">;</span>
        <span class="kw4">int</span> ret<span class="sy0">;</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/memset.html"><span class="kw3">memset</span></a><span class="br0">&#40;</span><span class="sy0">&amp;</span>fmt1<span class="sy0">,</span> <span class="nu0">0</span><span class="sy0">,</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span>fmt1<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>
        fmt1.<span class="me1">index</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
        fmt1.<span class="me1">type</span> <span class="sy0">=</span> V4L2_BUF_TYPE_VIDEO_CAPTURE<span class="sy0">;</span>
    <span class="co1">//获取当前驱动支持的视频格式</span>
        <span class="kw1">while</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>ret <span class="sy0">=</span> ioctl<span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_ENUM_FMT<span class="sy0">,</span> <span class="sy0">&amp;</span>fmt1<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy0">==</span> <span class="nu0">0</span><span class="br0">&#41;</span>
        <span class="br0">&#123;</span>
              fmt1.<span class="me1">index</span><span class="sy0">++;</span>
              <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;{ pixelformat = '%c%c%c%c', description = '%s' }<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>fmt1.<span class="me1">pixelformat</span> <span class="sy0">&amp;</span> <span class="nu12">0xFF</span><span class="sy0">,</span> <span class="br0">&#40;</span>fmt1.<span class="me1">pixelformat</span> <span class="sy0">&gt;&gt;</span> <span class="nu0">8</span><span class="br0">&#41;</span> <span class="sy0">&amp;</span> <span class="nu12">0xFF</span><span class="sy0">,</span><span class="br0">&#40;</span>fmt1.<span class="me1">pixelformat</span> <span class="sy0">&gt;&gt;</span> <span class="nu0">16</span><span class="br0">&#41;</span> <span class="sy0">&amp;</span> <span class="nu12">0xFF</span><span class="sy0">,</span> <span class="br0">&#40;</span>fmt1.<span class="me1">pixelformat</span> <span class="sy0">&gt;&gt;</span> <span class="nu0">24</span><span class="br0">&#41;</span> <span class="sy0">&amp;</span> <span class="nu12">0xFF</span><span class="sy0">,</span>fmt1.<span class="me1">description</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="br0">&#125;</span>
    <span class="co1">//帧的格式，比如宽度，高度等</span>
    CLEAR <span class="br0">&#40;</span>fmt<span class="br0">&#41;</span><span class="sy0">;</span>
    fmt.<span class="me1">type</span> <span class="sy0">=</span> V4L2_BUF_TYPE_VIDEO_CAPTURE<span class="sy0">;</span> <span class="co1">//数据流类型，必须永远是V4L2_BUF_TYPE_VIDEO_CAPTURE</span>
    fmt.<span class="me1">fmt</span>.<span class="me1">pix</span>.<span class="me1">width</span> <span class="sy0">=</span> <span class="nu0">640</span><span class="sy0">;</span><span class="co1">//宽，必须是16的倍数</span>
    fmt.<span class="me1">fmt</span>.<span class="me1">pix</span>.<span class="me1">height</span> <span class="sy0">=</span> <span class="nu0">480</span><span class="sy0">;</span><span class="co1">////高，必须是16的倍数</span>
    fmt.<span class="me1">fmt</span>.<span class="me1">pix</span>.<span class="me1">pixelformat</span> <span class="sy0">=</span> V4L2_PIX_FMT_JPEG<span class="sy0">;</span><span class="co1">//视频数据存储类型//V4L2_PIX_FMT_YUYV;//V4L2_PIX_FMT_YVU420;//V4L2_PIX_FMT_YUYV;</span>
    fmt.<span class="me1">fmt</span>.<span class="me1">pix</span>.<span class="me1">field</span> <span class="sy0">=</span> V4L2_FIELD_INTERLACED<span class="sy0">;</span>
    <span class="co1">//设置当前驱动的频捕获格式 </span>
    ff <span class="sy0">=</span> ioctl <span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_S_FMT<span class="sy0">,</span> <span class="sy0">&amp;</span>fmt<span class="br0">&#41;</span><span class="sy0">;</span> 
    <span class="kw1">if</span><span class="br0">&#40;</span>ff<span class="sy0">&lt;</span><span class="nu0">0</span><span class="br0">&#41;</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;failture VIDIOC_S_FMT<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="co1">//计算图片大小</span>
    file_length <span class="sy0">=</span> fmt.<span class="me1">fmt</span>.<span class="me1">pix</span>.<span class="me1">bytesperline</span> <span class="sy0">*</span> fmt.<span class="me1">fmt</span>.<span class="me1">pix</span>.<span class="me1">height</span><span class="sy0">;</span> 
&nbsp;
<span class="coMULTI">/*4.向驱动申请帧缓冲，一般不超过5个。struct v4l2_requestbuffers*/</span>
    <span class="kw4">struct</span> v4l2_requestbuffers req<span class="sy0">;</span>
    CLEAR <span class="br0">&#40;</span>req<span class="br0">&#41;</span><span class="sy0">;</span>
    req.<span class="me1">count</span> <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span><span class="co1">//缓存数量，也就是说在缓存队列里保持多少张照片</span>
    req.<span class="me1">type</span> <span class="sy0">=</span> V4L2_BUF_TYPE_VIDEO_CAPTURE<span class="sy0">;</span>
    req.<span class="me1">memory</span> <span class="sy0">=</span> V4L2_MEMORY_MMAP<span class="sy0">;</span><span class="co1">//或V4L2_MEMORY_USERPTR</span>
&nbsp;
    ff <span class="sy0">=</span> ioctl <span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_REQBUFS<span class="sy0">,</span> <span class="sy0">&amp;</span>req<span class="br0">&#41;</span><span class="sy0">;</span> <span class="co1">//申请缓冲，count是申请的数量</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>ff<span class="sy0">&lt;</span><span class="nu0">0</span><span class="br0">&#41;</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;failture VIDIOC_REQBUFS<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">if</span> <span class="br0">&#40;</span>req.<span class="me1">count</span> <span class="sy0">&lt;</span> <span class="nu0">1</span><span class="br0">&#41;</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;Insufficient buffer memory<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    buffers <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw4">struct</span> buffer<span class="sy0">*</span><span class="br0">&#41;</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/calloc.html"><span class="kw3">calloc</span></a> <span class="br0">&#40;</span>req.<span class="me1">count</span><span class="sy0">,</span> <span class="kw4">sizeof</span> <span class="br0">&#40;</span><span class="sy0">*</span>buffers<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span><span class="co1">//内存中建立对应空间</span>
<span class="coMULTI">/*5.将申请到的帧缓冲映射到用户空间，这样就可以直接操作采集到的帧了，而不必去复制。mmap*/</span>
    <span class="kw1">for</span> <span class="br0">&#40;</span>n_buffers <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> n_buffers <span class="sy0">&lt;</span> req.<span class="me1">count</span><span class="sy0">;</span> <span class="sy0">++</span>n_buffers<span class="br0">&#41;</span>
    <span class="br0">&#123;</span> 
        <span class="kw4">struct</span> v4l2_buffer buf<span class="sy0">;</span> <span class="co1">//驱动中的一帧</span>
        CLEAR <span class="br0">&#40;</span>buf<span class="br0">&#41;</span><span class="sy0">;</span>
           buf.<span class="me1">type</span> <span class="sy0">=</span> V4L2_BUF_TYPE_VIDEO_CAPTURE<span class="sy0">;</span>
           buf.<span class="me1">memory</span> <span class="sy0">=</span> V4L2_MEMORY_MMAP<span class="sy0">;</span>
           buf.<span class="me1">index</span> <span class="sy0">=</span> n_buffers<span class="sy0">;</span>
        <span class="co1">//把VIDIOC_REQBUFS中分配的数据缓存转换成物理地址 </span>
           <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">1</span> <span class="sy0">==</span> ioctl <span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_QUERYBUF<span class="sy0">,</span> <span class="sy0">&amp;</span>buf<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="co1">//映射用户空间</span>
                <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a> <span class="br0">&#40;</span><span class="st0">&quot;VIDIOC_QUERYBUF error<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
           buffers<span class="br0">&#91;</span>n_buffers<span class="br0">&#93;</span>.<span class="me1">length</span> <span class="sy0">=</span> buf.<span class="me1">length</span><span class="sy0">;</span>
           buffers<span class="br0">&#91;</span>n_buffers<span class="br0">&#93;</span>.<span class="me1">start</span> <span class="sy0">=</span> mmap <span class="br0">&#40;</span>NULL <span class="coMULTI">/* start anywhere */</span><span class="sy0">,</span>buf.<span class="me1">length</span><span class="sy0">,</span>PROT_READ <span class="sy0">|</span> PROT_WRITE <span class="coMULTI">/* required */</span><span class="sy0">,</span>MAP_SHARED <span class="coMULTI">/* recommended */</span><span class="sy0">,</span>fd<span class="sy0">,</span> buf.<span class="me1">m</span>.<span class="me1">offset</span><span class="br0">&#41;</span><span class="sy0">;</span><span class="co1">//通过mmap建立映射关系,返回映射区的起始地址</span>
&nbsp;
           <span class="kw1">if</span> <span class="br0">&#40;</span>MAP_FAILED <span class="sy0">==</span> buffers<span class="br0">&#91;</span>n_buffers<span class="br0">&#93;</span>.<span class="me1">start</span><span class="br0">&#41;</span>
            <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a> <span class="br0">&#40;</span><span class="st0">&quot;mmap failed<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="br0">&#125;</span>
<span class="coMULTI">/*6.将申请到的帧缓冲全部入队列，以便存放采集到的数据.VIDIOC_QBUF,struct v4l2_buffer*/</span>
    <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> n_buffers<span class="sy0">;</span> <span class="sy0">++</span>i<span class="br0">&#41;</span>
    <span class="br0">&#123;</span>
           <span class="kw4">struct</span> v4l2_buffer buf<span class="sy0">;</span>
           CLEAR <span class="br0">&#40;</span>buf<span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
           buf.<span class="me1">type</span> <span class="sy0">=</span> V4L2_BUF_TYPE_VIDEO_CAPTURE<span class="sy0">;</span>
         buf.<span class="me1">memory</span> <span class="sy0">=</span> V4L2_MEMORY_MMAP<span class="sy0">;</span>
           buf.<span class="me1">index</span> <span class="sy0">=</span> i<span class="sy0">;</span>
            <span class="co1">//把数据从缓存中读取出来 </span>
           <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">1</span> <span class="sy0">==</span> ioctl <span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_QBUF<span class="sy0">,</span> <span class="sy0">&amp;</span>buf<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="co1">//申请到的缓冲进入列队</span>
                <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a> <span class="br0">&#40;</span><span class="st0">&quot;VIDIOC_QBUF failed<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
&nbsp;
    type <span class="sy0">=</span> V4L2_BUF_TYPE_VIDEO_CAPTURE<span class="sy0">;</span>
<span class="coMULTI">/*7.开始视频的采集。VIDIOC_STREAMON*/</span>
    <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">1</span> <span class="sy0">==</span> ioctl <span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_STREAMON<span class="sy0">,</span> <span class="sy0">&amp;</span>type<span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="co1">//开始捕捉图像数据</span>
           <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a> <span class="br0">&#40;</span><span class="st0">&quot;VIDIOC_STREAMON failed<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
&nbsp;
    <span class="kw1">for</span> <span class="br0">&#40;</span><span class="sy0">;;</span><span class="br0">&#41;</span> <span class="co1">//这一段涉及到异步IO</span>
    <span class="br0">&#123;</span>
           fd_set fds<span class="sy0">;</span>
           <span class="kw4">struct</span> timeval tv<span class="sy0">;</span>
           <span class="kw4">int</span> r<span class="sy0">;</span>
&nbsp;
           FD_ZERO <span class="br0">&#40;</span><span class="sy0">&amp;</span>fds<span class="br0">&#41;</span><span class="sy0">;</span><span class="co1">//将指定的?件描述符集清空</span>
           FD_SET <span class="br0">&#40;</span>fd<span class="sy0">,</span> <span class="sy0">&amp;</span>fds<span class="br0">&#41;</span><span class="sy0">;</span><span class="co1">//在文件描述符集合中增鍔????个新的文件描述符</span>
&nbsp;
           <span class="coMULTI">/* Timeout. */</span>
           tv.<span class="me1">tv_sec</span> <span class="sy0">=</span> <span class="nu0">2</span><span class="sy0">;</span>
           tv.<span class="me1">tv_usec</span> <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp;
           r <span class="sy0">=</span> select <span class="br0">&#40;</span>fd <span class="sy0">+</span> <span class="nu0">1</span><span class="sy0">,</span> <span class="sy0">&amp;</span>fds<span class="sy0">,</span> NULL<span class="sy0">,</span> NULL<span class="sy0">,</span> <span class="sy0">&amp;</span>tv<span class="br0">&#41;</span><span class="sy0">;</span><span class="co1">//判断是否可读（即摄像头是否准备好），tv是定时</span>
&nbsp;
           <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">1</span> <span class="sy0">==</span> r<span class="br0">&#41;</span> 
        <span class="br0">&#123;</span>
                <span class="kw1">if</span> <span class="br0">&#40;</span>EINTR <span class="sy0">==</span> errno<span class="br0">&#41;</span>
                     <span class="kw1">continue</span><span class="sy0">;</span>
                <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a> <span class="br0">&#40;</span><span class="st0">&quot;select err<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                <span class="br0">&#125;</span>
           <span class="kw1">if</span> <span class="br0">&#40;</span><span class="nu0">0</span> <span class="sy0">==</span> r<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                <a href="http://www.opengroup.org/onlinepubs/009695399/functions/fprintf.html"><span class="kw3">fprintf</span></a> <span class="br0">&#40;</span>stderr<span class="sy0">,</span> <span class="st0">&quot;select timeout<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
                <a href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><span class="kw3">exit</span></a> <span class="br0">&#40;</span>EXIT_FAILURE<span class="br0">&#41;</span><span class="sy0">;</span>
                <span class="br0">&#125;</span>
&nbsp;
           <span class="kw1">if</span> <span class="br0">&#40;</span>read_frame <span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="co1">//如果可读，执行read_frame ()函数，并跳出循环</span>
               <span class="kw2">break</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
&nbsp;
    unmap<span class="sy0">:</span>
    <span class="kw1">for</span> <span class="br0">&#40;</span>i <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> i <span class="sy0">&lt;</span> n_buffers<span class="sy0">;</span> <span class="sy0">++</span>i<span class="br0">&#41;</span>
       <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">1</span> <span class="sy0">==</span> munmap <span class="br0">&#40;</span>buffers<span class="sy0">-&gt;</span>start<span class="sy0">,</span> buffers<span class="sy0">-&gt;</span>length<span class="br0">&#41;</span><span class="br0">&#41;</span>
            <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a> <span class="br0">&#40;</span><span class="st0">&quot;munmap error&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
    type <span class="sy0">=</span> V4L2_BUF_TYPE_VIDEO_CAPTURE<span class="sy0">;</span> 
<span class="coMULTI">/*10.停止视频的采集。VIDIOC_STREAMOFF*/</span>
        <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">-</span><span class="nu0">1</span> <span class="sy0">==</span> ioctl<span class="br0">&#40;</span>fd<span class="sy0">,</span> VIDIOC_STREAMOFF<span class="sy0">,</span> <span class="sy0">&amp;</span>type<span class="br0">&#41;</span><span class="br0">&#41;</span> 
                <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;VIDIOC_STREAMOFF&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
<span class="coMULTI">/*11.关闭视频设备。close(fd);*/</span>
    close <span class="br0">&#40;</span>fd<span class="br0">&#41;</span><span class="sy0">;</span>
    <a href="http://www.opengroup.org/onlinepubs/009695399/functions/fclose.html"><span class="kw3">fclose</span></a> <span class="br0">&#40;</span>file_fd<span class="br0">&#41;</span><span class="sy0">;</span>
    <a href="http://www.opengroup.org/onlinepubs/009695399/functions/exit.html"><span class="kw3">exit</span></a> <span class="br0">&#40;</span>EXIT_SUCCESS<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">return</span> <span class="nu0">0</span><span class="sy0">;</span>
<span class="br0">&#125;</span>