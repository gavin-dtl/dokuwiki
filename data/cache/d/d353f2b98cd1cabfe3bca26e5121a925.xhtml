
<h2 class="sectionedit1" id="字符串操作">字符串操作</h2>
<div class="level2">
<pre class="code c"><a href="http://www.opengroup.org/onlinepubs/009695399/functions/strlen.html"><span class="kw3">strlen</span></a>                     <span class="co1">//长度测量</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/strcpy.html"><span class="kw3">strcpy</span></a><span class="sy0">/</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/strncpy.html"><span class="kw3">strncpy</span></a>         <span class="co1">//拷贝</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/strcat.html"><span class="kw3">strcat</span></a><span class="sy0">/</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/strncat.html"><span class="kw3">strncat</span></a>         <span class="co1">//连接</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/strcmp.html"><span class="kw3">strcmp</span></a><span class="sy0">/</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/strncmp.html"><span class="kw3">strncmp</span></a>     <span class="co1">//比较</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/strchr.html"><span class="kw3">strchr</span></a>                   <span class="co1">//字符匹配函数</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/strstr.html"><span class="kw3">strstr</span></a>                   <span class="co1">//字符串匹配</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/memset.html"><span class="kw3">memset</span></a>               <span class="co1">//空间设定函数</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/atoi.html"><span class="kw3">atoi</span></a><span class="sy0">/</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/atol.html"><span class="kw3">atol</span></a><span class="sy0">/</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/atof.html"><span class="kw3">atof</span></a>        <span class="co1">//字符串转换功能</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/strtok.html"><span class="kw3">strtok</span></a>                  <span class="co1">//字符串分割数</span></pre>

</div>
<!-- EDIT1 SECTION "字符串操作" [1-404] -->
<h3 class="sectionedit2" id="strtok_字符串切割函数">strtok 字符串切割函数</h3>
<div class="level3">

<p>
char *strtok(char s[], const char *delim);
</p>
<ul>
<li class="level1"><div class="li"> 功能：strtok()用来将字符串分割成一个个片段。</div>
</li>
<li class="level1"><div class="li"> 参数1：s指向欲分割的字符串</div>
</li>
<li class="level1"><div class="li"> 参数2：delim则为分割字符串中包含的所有字符。</div>
</li>
<li class="level1"><div class="li"> 当strtok()在参数s的字符串中发现参数delim中包含的分割字符时,则会将该字符改为\0 字符，当连续出现多个时只替换第一个为\0。在第一次调用时：strtok()必需给予参数s字符串,往后的调用则将参数s设置成NULL，每次调用成功则返回指向被分割出片段的指针</div>
</li>
</ul>

</div>
<!-- EDIT2 SECTION "strtok 字符串切割函数" [405-1002] -->
<h3 class="sectionedit3" id="格式化字符串操作函数">格式化字符串操作函数</h3>
<div class="level3">

</div>

<h4 id="输出到buf指定的内存区域">输出到buf指定的内存区域。</h4>
<div class="level4">
<pre class="code c"><span class="kw4">int</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/sprintf.html"><span class="kw3">sprintf</span></a><span class="br0">&#40;</span><span class="kw4">char</span> <span class="sy0">*</span>buf<span class="sy0">,</span> <span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span>format<span class="sy0">,</span> …<span class="br0">&#41;</span><span class="sy0">;</span> </pre>

<p>
例：
</p>
<pre class="code c"><span class="kw4">char</span> buf<span class="br0">&#91;</span><span class="nu0">20</span><span class="br0">&#93;</span><span class="sy0">;</span>
<a href="http://www.opengroup.org/onlinepubs/009695399/functions/sprintf.html"><span class="kw3">sprintf</span></a><span class="br0">&#40;</span>buf<span class="sy0">,</span><span class="st0">&quot;%d:%d:%d&quot;</span><span class="sy0">,</span><span class="nu0">2013</span><span class="sy0">,</span><span class="nu0">10</span><span class="sy0">,</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span></pre>

</div>

<h4 id="从buf指定的内存区域中读入信息">从buf指定的内存区域中读入信息</h4>
<div class="level4">
<pre class="code c"><span class="kw4">int</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/sscanf.html"><span class="kw3">sscanf</span></a><span class="br0">&#40;</span><span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span>buf<span class="sy0">,</span><span class="kw4">const</span> <span class="kw4">char</span> <span class="sy0">*</span>format<span class="sy0">,</span> …<span class="br0">&#41;</span><span class="sy0">;</span></pre>

<p>
例：int a, b, c;
</p>
<pre class="code c"><a href="http://www.opengroup.org/onlinepubs/009695399/functions/sscanf.html"><span class="kw3">sscanf</span></a><span class="br0">&#40;</span><span class="st0">&quot;2013:10:1&quot;</span><span class="sy0">,</span> <span class="st0">&quot;%d:%d:%d&quot;</span><span class="sy0">,</span> <span class="sy0">&amp;</span>a<span class="sy0">,</span> <span class="sy0">&amp;</span>b<span class="sy0">,</span> <span class="sy0">&amp;</span>c<span class="br0">&#41;</span></pre>

</div>

<h4 id="sscanf高级用法">sscanf高级用法</h4>
<div class="level4">
<ul>
<li class="level1 node"><div class="li"> 跳过数据：%*s或%*d</div>
<ul>
<li class="level2"><div class="li"> 例：sscanf(“1234 5678”, “%*d %s”, buf);</div>
</li>
</ul>
</li>
<li class="level1 node"><div class="li"> 读指定宽度的数据：%[width]s</div>
<ul>
<li class="level2"><div class="li">例：sscanf(“12345678”, “%4s”, buf);</div>
</li>
</ul>
</li>
<li class="level1 node"><div class="li"> 支持集合操作：</div>
<ul>
<li class="level2"><div class="li"> %[a-z]       表示匹配a到z中任意字符(尽可能多的匹配)</div>
</li>
<li class="level2"><div class="li"> %[aBc]      匹配a、B、c中一员，贪婪性</div>
</li>
<li class="level2"><div class="li"> %[^a]       匹配非a的任意字符，贪婪性</div>
</li>
<li class="level2"><div class="li"> %*[^a] a   匹配非a的任意字符，忽略掉a字符前的，再把a忽略</div>
</li>
<li class="level2"><div class="li"> %[^a-z]     表示读取除a-z以外的所有字符</div>
</li>
</ul>
</li>
</ul>

</div>
<!-- EDIT3 SECTION "格式化字符串操作函数" [1003-] -->