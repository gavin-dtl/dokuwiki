<span class="co2">#include &quot;stdio.h&quot;</span>
&nbsp;
<span class="co1">//二叉树的练习</span>
&nbsp;
&nbsp;
<span class="kw4">typedef</span> <span class="kw4">struct</span> BiTNode
<span class="br0">&#123;</span>
    <span class="kw4">char</span> data<span class="sy0">;</span>   <span class="coMULTI">/*结点的数据域*/</span>
    <span class="kw4">struct</span> BiTNode <span class="sy0">*</span>lchild <span class="sy0">,</span> <span class="sy0">*</span>rchild<span class="sy0">;</span>  <span class="coMULTI">/*指向左孩子和右孩子*/</span>
<span class="br0">&#125;</span> BiTNode <span class="sy0">,</span> <span class="sy0">*</span>BiTree<span class="sy0">;</span>
&nbsp;
<span class="coMULTI">/*创建一棵二叉树*/</span>
CreatBiTree<span class="br0">&#40;</span>BiTree <span class="sy0">*</span>T<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw4">char</span> c<span class="sy0">;</span>
&nbsp;
     c <span class="sy0">=</span> <a href="http://www.opengroup.org/onlinepubs/009695399/functions/getch.html"><span class="kw3">getch</span></a><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;get = %c<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>c<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>c <span class="sy0">==</span> <span class="st0">' '</span><span class="br0">&#41;</span>
          <span class="sy0">*</span>T <span class="sy0">=</span> NULL<span class="sy0">;</span>
    <span class="kw1">else</span>
     <span class="br0">&#123;</span>
       <span class="sy0">*</span>T <span class="sy0">=</span> <span class="br0">&#40;</span>BiTNode <span class="sy0">*</span> <span class="br0">&#41;</span><a href="http://www.opengroup.org/onlinepubs/009695399/functions/malloc.html"><span class="kw3">malloc</span></a><span class="br0">&#40;</span><span class="kw4">sizeof</span><span class="br0">&#40;</span>BiTNode<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="coMULTI">/*创建根结点*/</span>
       <span class="br0">&#40;</span><span class="sy0">*</span>T<span class="br0">&#41;</span><span class="sy0">-&gt;</span>data <span class="sy0">=</span> c<span class="sy0">;</span>                        <span class="coMULTI">/*向根结点中输入数据*/</span>
       CreatBiTree<span class="br0">&#40;</span><span class="sy0">&amp;</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="sy0">*</span>T<span class="br0">&#41;</span><span class="sy0">-&gt;</span>lchild<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>       <span class="coMULTI">/*递归地创建左子树*/</span>
       CreatBiTree<span class="br0">&#40;</span><span class="sy0">&amp;</span><span class="br0">&#40;</span><span class="br0">&#40;</span><span class="sy0">*</span>T<span class="br0">&#41;</span><span class="sy0">-&gt;</span>rchild<span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span>       <span class="coMULTI">/*递归地创建右子树*/</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="coMULTI">/*访问二叉树结点，输出包含D字符结点位于二叉树中的层数*/</span>
visit<span class="br0">&#40;</span><span class="kw4">char</span> c<span class="sy0">,</span><span class="kw4">int</span> level<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
     <span class="kw1">if</span><span class="br0">&#40;</span>c <span class="sy0">==</span> <span class="st0">'D'</span><span class="br0">&#41;</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;%c is at %d lever of BiTree<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>c<span class="sy0">,</span>level<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
<span class="coMULTI">/*遍历二叉树*/</span>
<span class="co1">//先序</span>
PreOrderTraverse<span class="br0">&#40;</span>BiTree T<span class="sy0">,</span><span class="kw4">int</span> level<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>T<span class="br0">&#41;</span>
     <span class="br0">&#123;</span>   <span class="coMULTI">/*递归结束条件，T为空*/</span>
          <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;node: %c, level: %d<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>T<span class="sy0">-&gt;</span>data<span class="sy0">,</span>level<span class="br0">&#41;</span><span class="sy0">;</span>
        <span class="co1">//visit(T-&gt;data,level);  /*访问根结点*/</span>
        PreOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>lchild<span class="sy0">,</span>level<span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="coMULTI">/*先序遍历T的左子树*/</span>
        PreOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>rchild<span class="sy0">,</span>level<span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="coMULTI">/*先序遍历T的右子数*/</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
<span class="co1">//中序</span>
InOrderTraverse<span class="br0">&#40;</span>BiTree T<span class="sy0">,</span><span class="kw4">int</span> level<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>T<span class="br0">&#41;</span>
     <span class="br0">&#123;</span>   <span class="coMULTI">/*递归结束条件，T为空*/</span>
        InOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>lchild<span class="sy0">,</span>level<span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="coMULTI">/*先序遍历T的左子树*/</span>
          <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;node: %c, level: %d<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>T<span class="sy0">-&gt;</span>data<span class="sy0">,</span>level<span class="br0">&#41;</span><span class="sy0">;</span>
        InOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>rchild<span class="sy0">,</span>level<span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="coMULTI">/*先序遍历T的右子数*/</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
<span class="co1">//后序</span>
PostOrderTraverse<span class="br0">&#40;</span>BiTree T<span class="sy0">,</span><span class="kw4">int</span> level<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
    <span class="kw1">if</span><span class="br0">&#40;</span>T<span class="br0">&#41;</span>
     <span class="br0">&#123;</span>   <span class="coMULTI">/*递归结束条件，T为空*/</span>
        PostOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>lchild<span class="sy0">,</span>level<span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="coMULTI">/*先序遍历T的左子树*/</span>
        PostOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>rchild<span class="sy0">,</span>level<span class="sy0">+</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span>  <span class="coMULTI">/*先序遍历T的右子数*/</span>
          <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;node: %c, level: %d<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>T<span class="sy0">-&gt;</span>data<span class="sy0">,</span>level<span class="br0">&#41;</span><span class="sy0">;</span>
    <span class="br0">&#125;</span>
<span class="br0">&#125;</span>
<span class="co1">//统计二叉树叶子节点数</span>
<span class="kw4">int</span> CountLeaf<span class="br0">&#40;</span>BiTree T<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
     <span class="kw4">static</span> <span class="kw4">int</span> count <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp;
     <span class="kw1">if</span> <span class="br0">&#40;</span>T<span class="br0">&#41;</span>
     <span class="br0">&#123;</span>
          count <span class="sy0">=</span> CountLeaf<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>lchild<span class="br0">&#41;</span><span class="sy0">;</span>
          <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>lchild <span class="sy0">==</span> NULL<span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>rchild <span class="sy0">==</span> NULL<span class="br0">&#41;</span><span class="br0">&#41;</span>
          <span class="br0">&#123;</span>
               count <span class="sy0">++;</span>
          <span class="br0">&#125;</span>
          count <span class="sy0">=</span> CountLeaf<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>rchild<span class="br0">&#41;</span><span class="sy0">;</span>
     <span class="br0">&#125;</span>
     <span class="kw1">return</span> count<span class="sy0">;</span>
<span class="br0">&#125;</span>
<span class="co1">//求二叉树的深度</span>
<span class="kw4">int</span> TreeDepth<span class="br0">&#40;</span>BiTree T<span class="br0">&#41;</span>
<span class="br0">&#123;</span>
     <span class="kw4">static</span> <span class="kw4">int</span> count <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
&nbsp;
     <span class="kw1">if</span> <span class="br0">&#40;</span>T<span class="br0">&#41;</span>
     <span class="br0">&#123;</span>
          count<span class="sy0">++;</span>
          count <span class="sy0">=</span> TreeDepth<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>lchild<span class="br0">&#41;</span><span class="sy0">;</span>
          count <span class="sy0">=</span> TreeDepth<span class="br0">&#40;</span>T<span class="sy0">-&gt;</span>rchild<span class="br0">&#41;</span><span class="sy0">;</span>
     <span class="br0">&#125;</span>
     <span class="kw1">return</span> count<span class="sy0">;</span>
<span class="br0">&#125;</span>
&nbsp;
main<span class="br0">&#40;</span><span class="br0">&#41;</span>
<span class="br0">&#123;</span>
   <span class="kw4">int</span> level <span class="sy0">=</span> <span class="nu0">1</span><span class="sy0">;</span>
   <span class="kw4">int</span> Node_num <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">,</span>Depth_num <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span>
   BiTree T <span class="sy0">=</span> NULL<span class="sy0">;</span>  <span class="coMULTI">/*最开始T指向空*/</span>
&nbsp;
   CreatBiTree<span class="br0">&#40;</span><span class="sy0">&amp;</span>T<span class="br0">&#41;</span><span class="sy0">;</span>                 <span class="co1">//创建二叉树，先画出树形图，根据图进行输入创建</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;<span class="es1">\n</span>先序遍历：<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   PreOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">,</span>level<span class="br0">&#41;</span><span class="sy0">;</span>      <span class="co1">//遍历二叉树，找到包含D字符结点位于二叉树中的层数</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;<span class="es1">\n</span>中序遍历：<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   InOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">,</span>level<span class="br0">&#41;</span><span class="sy0">;</span>      <span class="co1">//遍历二叉树，找到包含D字符结点位于二叉树中的层数</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;<span class="es1">\n</span>后序遍历：<span class="es1">\n</span>&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span>
   PostOrderTraverse<span class="br0">&#40;</span>T<span class="sy0">,</span>level<span class="br0">&#41;</span><span class="sy0">;</span>      <span class="co1">//遍历二叉树，找到包含D字符结点位于二叉树中的层数</span>
&nbsp;
   Node_num <span class="sy0">=</span> CountLeaf<span class="br0">&#40;</span>T<span class="br0">&#41;</span><span class="sy0">;</span>
   Depth_num <span class="sy0">=</span> TreeDepth<span class="br0">&#40;</span>T<span class="br0">&#41;</span><span class="sy0">;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span><span class="st0">&quot;<span class="es1">\n</span>Node_num = %d, Depth_num = %d<span class="es1">\n</span>&quot;</span><span class="sy0">,</span>Node_num<span class="sy0">,</span>Depth_num<span class="br0">&#41;</span><span class="sy0">;</span>
<span class="br0">&#125;</span>