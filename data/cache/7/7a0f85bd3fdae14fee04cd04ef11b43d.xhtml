
<h2 class="sectionedit1" id="音量加减键修改为默认控制媒体音量">音量加减键修改为默认控制媒体音量</h2>
<div class="level2">

</div>
<!-- EDIT1 SECTION "音量加减键修改为默认控制媒体音量" [1-61] -->
<h3 class="sectionedit2" id="实现原理">实现原理</h3>
<div class="level3">
<ul>
<li class="level1"><div class="li"> 按键所对应的默认音频数据流从来电数据流改为音乐数据流</div>
</li>
</ul>
<ul>
<li class="level1"><div class="li"> ./frameworks/base/packages/SystemUI/src/com/android/systemui/volume/VolumePanel.java</div>
</li>
</ul>
<pre class="code cpp">    <span class="kw2">protected</span> <span class="kw4">void</span> onShowVolumeChanged<span class="br0">&#40;</span><span class="kw4">int</span> streamType, <span class="kw4">int</span> flags, MediaController controller<span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <span class="kw4">int</span> index <span class="sy1">=</span> getStreamVolume<span class="br0">&#40;</span>streamType<span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
        mRingIsSilent <span class="sy1">=</span> <span class="kw2">false</span><span class="sy4">;</span>
&nbsp;
        <span class="kw1">if</span> <span class="br0">&#40;</span>LOGD<span class="br0">&#41;</span> <span class="br0">&#123;</span>
            Log.<span class="me1">d</span><span class="br0">&#40;</span>mTag, <span class="st0">&quot;onShowVolumeChanged(streamType: &quot;</span> <span class="sy2">+</span> streamToString<span class="br0">&#40;</span>streamType<span class="br0">&#41;</span>
                    <span class="sy2">+</span> <span class="st0">&quot;, flags: &quot;</span> <span class="sy2">+</span> flagsToString<span class="br0">&#40;</span>flags<span class="br0">&#41;</span> <span class="sy2">+</span> <span class="st0">&quot;), index: &quot;</span> <span class="sy2">+</span> index<span class="br0">&#41;</span><span class="sy4">;</span>
        <span class="br0">&#125;</span>
&nbsp;
        <span class="co1">// get max volume for progress bar</span>
&nbsp;
        <span class="kw4">int</span> max <span class="sy1">=</span> getStreamMaxVolume<span class="br0">&#40;</span>streamType<span class="br0">&#41;</span><span class="sy4">;</span>
        StreamControl sc <span class="sy1">=</span> mStreamControls.<span class="me1">get</span><span class="br0">&#40;</span>streamType<span class="br0">&#41;</span><span class="sy4">;</span>
&nbsp;
        <span class="kw1">switch</span> <span class="br0">&#40;</span>streamType<span class="br0">&#41;</span> <span class="br0">&#123;</span>
&nbsp;
            <span class="kw1">case</span> AudioManager.<span class="me1">STREAM_RING</span><span class="sy4">:</span> <span class="br0">&#123;</span>
                Uri ringuri <span class="sy1">=</span> RingtoneManager.<span class="me1">getActualDefaultRingtoneUri</span><span class="br0">&#40;</span>
                        mContext, RingtoneManager.<span class="me1">TYPE_RINGTONE</span><span class="br0">&#41;</span><span class="sy4">;</span>
                <span class="kw1">if</span> <span class="br0">&#40;</span>ringuri <span class="sy1">==</span> null<span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    mRingIsSilent <span class="sy1">=</span> <span class="kw2">true</span><span class="sy4">;</span>
                <span class="br0">&#125;</span>
                <span class="kw1">break</span><span class="sy4">;</span>
            <span class="br0">&#125;</span>
&nbsp;
            <span class="kw1">case</span> AudioManager.<span class="me1">STREAM_MUSIC</span><span class="sy4">:</span> <span class="br0">&#123;</span>
                <span class="co1">// Special case for when Bluetooth is active for music</span>
                <span class="kw1">if</span> <span class="br0">&#40;</span><span class="br0">&#40;</span>mAudioManager.<span class="me1">getDevicesForStream</span><span class="br0">&#40;</span>AudioManager.<span class="me1">STREAM_MUSIC</span><span class="br0">&#41;</span> <span class="sy3">&amp;</span>
                        <span class="br0">&#40;</span>AudioManager.<span class="me1">DEVICE_OUT_BLUETOOTH_A2DP</span> <span class="sy3">|</span>
                        AudioManager.<span class="me1">DEVICE_OUT_BLUETOOTH_A2DP_HEADPHONES</span> <span class="sy3">|</span>
                        AudioManager.<span class="me1">DEVICE_OUT_BLUETOOTH_A2DP_SPEAKER</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="sy3">!</span><span class="sy1">=</span> <span class="nu0">0</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
                    setMusicIcon<span class="br0">&#40;</span>IC_AUDIO_BT, IC_AUDIO_BT_MUTE<span class="br0">&#41;</span><span class="sy4">;</span>
                <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span>
                    setMusicIcon<span class="br0">&#40;</span>IC_AUDIO_VOL, IC_AUDIO_VOL_MUTE<span class="br0">&#41;</span><span class="sy4">;</span>
                <span class="br0">&#125;</span>
                <span class="kw1">break</span><span class="sy4">;</span>
            <span class="br0">&#125;</span>
&nbsp;
            <span class="kw1">case</span> AudioManager.<span class="me1">STREAM_VOICE_CALL</span><span class="sy4">:</span> <span class="br0">&#123;</span></pre>
<pre class="code cpp">     <span class="nu0">9</span> <span class="sy2">---</span> a<span class="sy2">/</span>frameworks<span class="sy2">/</span>base<span class="sy2">/</span>media<span class="sy2">/</span>java<span class="sy2">/</span>android<span class="sy2">/</span>media<span class="sy2">/</span>AudioService.<span class="me1">java</span>
     <span class="nu0">10</span> <span class="sy2">+++</span> b<span class="sy2">/</span>frameworks<span class="sy2">/</span>base<span class="sy2">/</span>media<span class="sy2">/</span>java<span class="sy2">/</span>android<span class="sy2">/</span>media<span class="sy2">/</span>AudioService.<span class="me1">java</span>
     <span class="nu0">11</span> @@ <span class="sy2">-</span><span class="nu0">3282</span>,<span class="nu0">15</span> <span class="sy2">+</span><span class="nu0">3282</span>,<span class="nu0">16</span> @@ <span class="kw2">public</span> <span class="kw2">class</span> AudioService extends IAudioService.<span class="me1">Stub</span> <span class="br0">&#123;</span>
     <span class="nu0">12</span>                      <span class="kw1">return</span> AudioSystem.<span class="me1">STREAM_VOICE_CALL</span><span class="sy4">;</span>
     <span class="nu0">13</span>                  <span class="br0">&#125;</span>
     <span class="nu0">14</span>              <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>suggestedStreamType <span class="sy1">==</span> AudioManager.<span class="me1">USE_DEFAULT_STREAM_TYPE</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="nu0">15</span> <span class="sy2">-</span>                <span class="kw1">if</span> <span class="br0">&#40;</span>isAfMusicActiveRecently<span class="br0">&#40;</span>StreamOverride.<span class="me1">sDelayMs</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="nu0">16</span> <span class="sy2">+</span>                <span class="kw1">return</span> AudioSystem.<span class="me1">STREAM_MUSIC</span><span class="sy4">;</span>
     <span class="nu0">17</span> <span class="sy2">+</span>                <span class="coMULTI">/* if (isAfMusicActiveRecently(StreamOverride.sDelayMs)) {
     18                      if (DEBUG_VOL)
     19                          Log.v(TAG, &quot;getActiveStreamType: Forcing STREAM_MUSIC stream active&quot;);
     20                      return AudioSystem.STREAM_MUSIC;
     21 -                    } else {
     22 -                        if (DEBUG_VOL)
     23 -                            Log.v(TAG, &quot;getActiveStreamType: Forcing STREAM_RING b/c default&quot;);
     24 -                        return AudioSystem.STREAM_RING;
     25 -                }
     26 +                } else {
     27 +                    if (DEBUG_VOL)
     28 +                        Log.v(TAG, &quot;getActiveStreamType: Forcing STREAM_RING b/c default&quot;);
     29 +                    return AudioSystem.STREAM_RING;
     30 +                } */</span>
     <span class="nu0">31</span>              <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">&#40;</span>isAfMusicActiveRecently<span class="br0">&#40;</span><span class="nu0">0</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="nu0">32</span>                  <span class="kw1">if</span> <span class="br0">&#40;</span>DEBUG_VOL<span class="br0">&#41;</span>
     <span class="nu0">33</span>                      Log.<span class="me1">v</span><span class="br0">&#40;</span>TAG, <span class="st0">&quot;getActiveStreamType: Forcing STREAM_MUSIC stream active&quot;</span><span class="br0">&#41;</span><span class="sy4">;</span></pre>

</div>
<!-- EDIT2 SECTION "实现原理" [62-] -->